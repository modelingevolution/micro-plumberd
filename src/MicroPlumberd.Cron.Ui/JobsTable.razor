@using Humanizer
@using MicroPlumberd.Services.Cron
@inject IJobsMonitor monitor
@inject IJobService srv

<JobMonitorObservable>
    <MudToolBar>
        <MudText Typo="Typo.body1">Running: @monitor.Running</MudText>
        <MudText Style="margin-left:16px" Typo="Typo.body1">Scheduled: @monitor.Scheduled</MudText>
        <MudText Style="margin-left:16px" Typo="Typo.body1">Enqueued: @monitor.Enqueued</MudText>
    </MudToolBar>
    <MudTable Items="@monitor.Items" 
              Filter="x=>!x.Definition.IsDeleted" 
              Dense="true">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Command</MudTh>
            <MudTh Style="width: 300px">State</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            
            <MudTd>@context.Name</MudTd>
            <MudTd>
                <MudTooltip Text="@context.CommandPayload">
                    @context.CommandType
                </MudTooltip>

            </MudTd>
            <MudTd >
                <JobStatusIndicator JobDefinitionId="@context.Definition.JobDefinitionId"/>
            </MudTd>
            <MudTd>
                <MudButtonGroup Variant="Variant.Filled">
                    <MudButton OnClick="@(() => srv.RunOnce(context.Definition.JobDefinitionId))">Run</MudButton>
                    <MudButton OnClick="@(() => srv.Delete(context.Definition.JobDefinitionId))">Delete</MudButton>
                    @if (context.IsEnabled)
                    {
                        <MudButton OnClick="@(() => srv.Disable(context.Definition.JobDefinitionId))">Disable</MudButton>
                    }
                    else
                    {
                        <MudButton OnClick="@(() => srv.Enable(context.Definition.JobDefinitionId))">Enable</MudButton>
                    }
                </MudButtonGroup>
            </MudTd>
        </RowTemplate>
    </MudTable>

</JobMonitorObservable>

@code {
    // we need to refresh the page every 5 seconds.
    



}
