### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.AsyncLazy`1
  commentId: T:MicroPlumberd.AsyncLazy`1
  id: AsyncLazy`1
  parent: MicroPlumberd
  children:
  - MicroPlumberd.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  - MicroPlumberd.AsyncLazy`1.#ctor(System.Func{`0})
  - MicroPlumberd.AsyncLazy`1.GetAwaiter
  langs:
  - csharp
  - vb
  name: AsyncLazy<T>
  nameWithType: AsyncLazy<T>
  fullName: MicroPlumberd.AsyncLazy<T>
  type: Class
  source:
    remote:
      path: src/MicroPlumberd/AsyncLazy.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AsyncLazy
    path: src/MicroPlumberd/AsyncLazy.cs
    startLine: 4
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: 'public class AsyncLazy<T> : Lazy<Task<T>>'
    typeParameters:
    - id: T
    content.vb: Public Class AsyncLazy(Of T) Inherits Lazy(Of Task(Of T))
  inheritance:
  - System.Object
  - System.Lazy{System.Threading.Tasks.Task{{T}}}
  inheritedMembers:
  - System.Lazy{System.Threading.Tasks.Task{{T}}}.ToString
  - System.Lazy{System.Threading.Tasks.Task{{T}}}.IsValueCreated
  - System.Lazy{System.Threading.Tasks.Task{{T}}}.Value
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: AsyncLazy(Of T)
  fullName.vb: MicroPlumberd.AsyncLazy(Of T)
  name.vb: AsyncLazy(Of T)
- uid: MicroPlumberd.AsyncLazy`1.#ctor(System.Func{`0})
  commentId: M:MicroPlumberd.AsyncLazy`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: MicroPlumberd.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: AsyncLazy(Func<T>)
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<T>)
  fullName: MicroPlumberd.AsyncLazy<T>.AsyncLazy(System.Func<T>)
  type: Constructor
  source:
    remote:
      path: src/MicroPlumberd/AsyncLazy.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: .ctor
    path: src/MicroPlumberd/AsyncLazy.cs
    startLine: 6
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public AsyncLazy(Func<T> valueFactory)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
    content.vb: Public Sub New(valueFactory As Func(Of T))
  overload: MicroPlumberd.AsyncLazy`1.#ctor*
  nameWithType.vb: AsyncLazy(Of T).New(Func(Of T))
  fullName.vb: MicroPlumberd.AsyncLazy(Of T).New(System.Func(Of T))
  name.vb: New(Func(Of T))
- uid: MicroPlumberd.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  commentId: M:MicroPlumberd.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  id: '#ctor(System.Func{System.Threading.Tasks.Task{`0}})'
  parent: MicroPlumberd.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: AsyncLazy(Func<Task<T>>)
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  fullName: MicroPlumberd.AsyncLazy<T>.AsyncLazy(System.Func<System.Threading.Tasks.Task<T>>)
  type: Constructor
  source:
    remote:
      path: src/MicroPlumberd/AsyncLazy.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: .ctor
    path: src/MicroPlumberd/AsyncLazy.cs
    startLine: 11
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public AsyncLazy(Func<Task<T>> taskFactory)
    parameters:
    - id: taskFactory
      type: System.Func{System.Threading.Tasks.Task{{T}}}
    content.vb: Public Sub New(taskFactory As Func(Of Task(Of T)))
  overload: MicroPlumberd.AsyncLazy`1.#ctor*
  nameWithType.vb: AsyncLazy(Of T).New(Func(Of Task(Of T)))
  fullName.vb: MicroPlumberd.AsyncLazy(Of T).New(System.Func(Of System.Threading.Tasks.Task(Of T)))
  name.vb: New(Func(Of Task(Of T)))
- uid: MicroPlumberd.AsyncLazy`1.GetAwaiter
  commentId: M:MicroPlumberd.AsyncLazy`1.GetAwaiter
  id: GetAwaiter
  parent: MicroPlumberd.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: GetAwaiter()
  nameWithType: AsyncLazy<T>.GetAwaiter()
  fullName: MicroPlumberd.AsyncLazy<T>.GetAwaiter()
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/AsyncLazy.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: GetAwaiter
    path: src/MicroPlumberd/AsyncLazy.cs
    startLine: 16
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public TaskAwaiter<T> GetAwaiter()
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter{{T}}
    content.vb: Public Function GetAwaiter() As TaskAwaiter(Of T)
  overload: MicroPlumberd.AsyncLazy`1.GetAwaiter*
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter()
  fullName.vb: MicroPlumberd.AsyncLazy(Of T).GetAwaiter()
references:
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Lazy{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Lazy{System.Threading.Tasks.Task{`0}}
  parent: System
  definition: System.Lazy`1
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<Task<T>>
  nameWithType: Lazy<Task<T>>
  fullName: System.Lazy<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Lazy(Of Task(Of T))
  fullName.vb: System.Lazy(Of System.Threading.Tasks.Task(Of T))
  name.vb: Lazy(Of Task(Of T))
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Lazy{System.Threading.Tasks.Task{{T}}}.ToString
  commentId: M:System.Lazy{System.Threading.Tasks.Task{`0}}.ToString
  parent: System.Lazy{System.Threading.Tasks.Task{{T}}}
  definition: System.Lazy`1.ToString
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  name: ToString()
  nameWithType: Lazy<Task<T>>.ToString()
  fullName: System.Lazy<System.Threading.Tasks.Task<T>>.ToString()
  nameWithType.vb: Lazy(Of Task(Of T)).ToString()
  fullName.vb: System.Lazy(Of System.Threading.Tasks.Task(Of T)).ToString()
  spec.csharp:
  - uid: System.Lazy{System.Threading.Tasks.Task{`0}}.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Lazy{System.Threading.Tasks.Task{`0}}.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  - name: (
  - name: )
- uid: System.Lazy{System.Threading.Tasks.Task{{T}}}.IsValueCreated
  commentId: P:System.Lazy{System.Threading.Tasks.Task{`0}}.IsValueCreated
  parent: System.Lazy{System.Threading.Tasks.Task{{T}}}
  definition: System.Lazy`1.IsValueCreated
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.isvaluecreated
  name: IsValueCreated
  nameWithType: Lazy<Task<T>>.IsValueCreated
  fullName: System.Lazy<System.Threading.Tasks.Task<T>>.IsValueCreated
  nameWithType.vb: Lazy(Of Task(Of T)).IsValueCreated
  fullName.vb: System.Lazy(Of System.Threading.Tasks.Task(Of T)).IsValueCreated
- uid: System.Lazy{System.Threading.Tasks.Task{{T}}}.Value
  commentId: P:System.Lazy{System.Threading.Tasks.Task{`0}}.Value
  parent: System.Lazy{System.Threading.Tasks.Task{{T}}}
  definition: System.Lazy`1.Value
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.value
  name: Value
  nameWithType: Lazy<Task<T>>.Value
  fullName: System.Lazy<System.Threading.Tasks.Task<T>>.Value
  nameWithType.vb: Lazy(Of Task(Of T)).Value
  fullName.vb: System.Lazy(Of System.Threading.Tasks.Task(Of T)).Value
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Lazy`1.ToString
  commentId: M:System.Lazy`1.ToString
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  name: ToString()
  nameWithType: Lazy<T>.ToString()
  fullName: System.Lazy<T>.ToString()
  nameWithType.vb: Lazy(Of T).ToString()
  fullName.vb: System.Lazy(Of T).ToString()
  spec.csharp:
  - uid: System.Lazy`1.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Lazy`1.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1.tostring
  - name: (
  - name: )
- uid: System.Lazy`1.IsValueCreated
  commentId: P:System.Lazy`1.IsValueCreated
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.isvaluecreated
  name: IsValueCreated
  nameWithType: Lazy<T>.IsValueCreated
  fullName: System.Lazy<T>.IsValueCreated
  nameWithType.vb: Lazy(Of T).IsValueCreated
  fullName.vb: System.Lazy(Of T).IsValueCreated
- uid: System.Lazy`1.Value
  commentId: P:System.Lazy`1.Value
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1.value
  name: Value
  nameWithType: Lazy<T>.Value
  fullName: System.Lazy<T>.Value
  nameWithType.vb: Lazy(Of T).Value
  fullName.vb: System.Lazy(Of T).Value
- uid: MicroPlumberd.AsyncLazy`1.#ctor*
  commentId: Overload:MicroPlumberd.AsyncLazy`1.#ctor
  href: MicroPlumberd.AsyncLazy-1.html#MicroPlumberd_AsyncLazy_1__ctor_System_Func__0__
  name: AsyncLazy
  nameWithType: AsyncLazy<T>.AsyncLazy
  fullName: MicroPlumberd.AsyncLazy<T>.AsyncLazy
  nameWithType.vb: AsyncLazy(Of T).New
  fullName.vb: MicroPlumberd.AsyncLazy(Of T).New
  name.vb: New
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{`0}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Task<T>>
  nameWithType: Func<Task<T>>
  fullName: System.Func<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of Task(Of T))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of Task(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: MicroPlumberd.AsyncLazy`1.GetAwaiter*
  commentId: Overload:MicroPlumberd.AsyncLazy`1.GetAwaiter
  href: MicroPlumberd.AsyncLazy-1.html#MicroPlumberd_AsyncLazy_1_GetAwaiter
  name: GetAwaiter
  nameWithType: AsyncLazy<T>.GetAwaiter
  fullName: MicroPlumberd.AsyncLazy<T>.GetAwaiter
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter
  fullName.vb: MicroPlumberd.AsyncLazy(Of T).GetAwaiter
- uid: System.Runtime.CompilerServices.TaskAwaiter{{T}}
  commentId: T:System.Runtime.CompilerServices.TaskAwaiter{`0}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.TaskAwaiter`1
  href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  name: TaskAwaiter<T>
  nameWithType: TaskAwaiter<T>
  fullName: System.Runtime.CompilerServices.TaskAwaiter<T>
  nameWithType.vb: TaskAwaiter(Of T)
  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of T)
  name.vb: TaskAwaiter(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Runtime.CompilerServices.TaskAwaiter`1
  commentId: T:System.Runtime.CompilerServices.TaskAwaiter`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  name: TaskAwaiter<TResult>
  nameWithType: TaskAwaiter<TResult>
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
  nameWithType.vb: TaskAwaiter(Of TResult)
  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)
  name.vb: TaskAwaiter(Of TResult)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: TaskAwaiter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.taskawaiter-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.CompilerServices
    name: CompilerServices
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.CompilerServices
    name: CompilerServices
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices
