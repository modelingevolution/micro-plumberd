### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.IPlumberConfig
  commentId: T:MicroPlumberd.IPlumberConfig
  id: IPlumberConfig
  parent: MicroPlumberd
  children:
  - MicroPlumberd.IPlumberConfig.Conventions
  - MicroPlumberd.IPlumberConfig.Created
  - MicroPlumberd.IPlumberConfig.SerializerFactory
  - MicroPlumberd.IPlumberConfig.ServiceProvider
  - MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy(System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}})
  langs:
  - csharp
  - vb
  name: IPlumberConfig
  nameWithType: IPlumberConfig
  fullName: MicroPlumberd.IPlumberConfig
  type: Interface
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: IPlumberConfig
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 4
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: 'public interface IPlumberConfig : IExtension'
    content.vb: Public Interface IPlumberConfig Inherits IExtension
  inheritedMembers:
  - MicroPlumberd.IExtension.GetExtension``1
- uid: MicroPlumberd.IPlumberConfig.SerializerFactory
  commentId: P:MicroPlumberd.IPlumberConfig.SerializerFactory
  id: SerializerFactory
  parent: MicroPlumberd.IPlumberConfig
  langs:
  - csharp
  - vb
  name: SerializerFactory
  nameWithType: IPlumberConfig.SerializerFactory
  fullName: MicroPlumberd.IPlumberConfig.SerializerFactory
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SerializerFactory
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 6
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: Func<Type, IObjectSerializer> SerializerFactory { get; set; }
    parameters: []
    return:
      type: System.Func{System.Type,MicroPlumberd.IObjectSerializer}
    content.vb: Property SerializerFactory As Func(Of Type, IObjectSerializer)
  overload: MicroPlumberd.IPlumberConfig.SerializerFactory*
- uid: MicroPlumberd.IPlumberConfig.Conventions
  commentId: P:MicroPlumberd.IPlumberConfig.Conventions
  id: Conventions
  parent: MicroPlumberd.IPlumberConfig
  langs:
  - csharp
  - vb
  name: Conventions
  nameWithType: IPlumberConfig.Conventions
  fullName: MicroPlumberd.IPlumberConfig.Conventions
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Conventions
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 7
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: IConventions Conventions { get; }
    parameters: []
    return:
      type: MicroPlumberd.IConventions
    content.vb: ReadOnly Property Conventions As IConventions
  overload: MicroPlumberd.IPlumberConfig.Conventions*
- uid: MicroPlumberd.IPlumberConfig.ServiceProvider
  commentId: P:MicroPlumberd.IPlumberConfig.ServiceProvider
  id: ServiceProvider
  parent: MicroPlumberd.IPlumberConfig
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: IPlumberConfig.ServiceProvider
  fullName: MicroPlumberd.IPlumberConfig.ServiceProvider
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ServiceProvider
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 8
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: IServiceProvider ServiceProvider { get; set; }
    parameters: []
    return:
      type: System.IServiceProvider
    content.vb: Property ServiceProvider As IServiceProvider
  overload: MicroPlumberd.IPlumberConfig.ServiceProvider*
- uid: MicroPlumberd.IPlumberConfig.Created
  commentId: E:MicroPlumberd.IPlumberConfig.Created
  id: Created
  parent: MicroPlumberd.IPlumberConfig
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IPlumberConfig.Created
  fullName: MicroPlumberd.IPlumberConfig.Created
  type: Event
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Created
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 9
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: event Action<IPlumber> Created
    return:
      type: System.Action{MicroPlumberd.IPlumber}
    content.vb: Event Created As Action(Of IPlumber)
- uid: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy(System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}})
  commentId: M:MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy(System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}})
  id: SetErrorHandlePolicy(System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}})
  parent: MicroPlumberd.IPlumberConfig
  langs:
  - csharp
  - vb
  name: SetErrorHandlePolicy(Func<Exception, string, CancellationToken, Task<ErrorHandleDecision>>)
  nameWithType: IPlumberConfig.SetErrorHandlePolicy(Func<Exception, string, CancellationToken, Task<ErrorHandleDecision>>)
  fullName: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy(System.Func<System.Exception, string, System.Threading.CancellationToken, System.Threading.Tasks.Task<MicroPlumberd.ErrorHandleDecision>>)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/IPlumberConfig.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SetErrorHandlePolicy
    path: src/MicroPlumberd/IPlumberConfig.cs
    startLine: 11
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: void SetErrorHandlePolicy(Func<Exception, string, CancellationToken, Task<ErrorHandleDecision>> handler)
    parameters:
    - id: handler
      type: System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}}
    content.vb: Sub SetErrorHandlePolicy(handler As Func(Of Exception, String, CancellationToken, Task(Of ErrorHandleDecision)))
  overload: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy*
  nameWithType.vb: IPlumberConfig.SetErrorHandlePolicy(Func(Of Exception, String, CancellationToken, Task(Of ErrorHandleDecision)))
  fullName.vb: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy(System.Func(Of System.Exception, String, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of MicroPlumberd.ErrorHandleDecision)))
  name.vb: SetErrorHandlePolicy(Func(Of Exception, String, CancellationToken, Task(Of ErrorHandleDecision)))
references:
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: MicroPlumberd.IExtension.GetExtension``1
  commentId: M:MicroPlumberd.IExtension.GetExtension``1
  parent: MicroPlumberd.IExtension
  href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  name: GetExtension<T>()
  nameWithType: IExtension.GetExtension<T>()
  fullName: MicroPlumberd.IExtension.GetExtension<T>()
  nameWithType.vb: IExtension.GetExtension(Of T)()
  fullName.vb: MicroPlumberd.IExtension.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: MicroPlumberd.IExtension.GetExtension``1
    name: GetExtension
    href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IExtension.GetExtension``1
    name: GetExtension
    href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: MicroPlumberd.IExtension
  commentId: T:MicroPlumberd.IExtension
  parent: MicroPlumberd
  href: MicroPlumberd.IExtension.html
  name: IExtension
  nameWithType: IExtension
  fullName: MicroPlumberd.IExtension
- uid: MicroPlumberd.IPlumberConfig.SerializerFactory*
  commentId: Overload:MicroPlumberd.IPlumberConfig.SerializerFactory
  href: MicroPlumberd.IPlumberConfig.html#MicroPlumberd_IPlumberConfig_SerializerFactory
  name: SerializerFactory
  nameWithType: IPlumberConfig.SerializerFactory
  fullName: MicroPlumberd.IPlumberConfig.SerializerFactory
- uid: System.Func{System.Type,MicroPlumberd.IObjectSerializer}
  commentId: T:System.Func{System.Type,MicroPlumberd.IObjectSerializer}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Type, IObjectSerializer>
  nameWithType: Func<Type, IObjectSerializer>
  fullName: System.Func<System.Type, MicroPlumberd.IObjectSerializer>
  nameWithType.vb: Func(Of Type, IObjectSerializer)
  fullName.vb: System.Func(Of System.Type, MicroPlumberd.IObjectSerializer)
  name.vb: Func(Of Type, IObjectSerializer)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IObjectSerializer
    name: IObjectSerializer
    href: MicroPlumberd.IObjectSerializer.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IObjectSerializer
    name: IObjectSerializer
    href: MicroPlumberd.IObjectSerializer.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MicroPlumberd.IPlumberConfig.Conventions*
  commentId: Overload:MicroPlumberd.IPlumberConfig.Conventions
  href: MicroPlumberd.IPlumberConfig.html#MicroPlumberd_IPlumberConfig_Conventions
  name: Conventions
  nameWithType: IPlumberConfig.Conventions
  fullName: MicroPlumberd.IPlumberConfig.Conventions
- uid: MicroPlumberd.IConventions
  commentId: T:MicroPlumberd.IConventions
  parent: MicroPlumberd
  href: MicroPlumberd.IConventions.html
  name: IConventions
  nameWithType: IConventions
  fullName: MicroPlumberd.IConventions
- uid: MicroPlumberd.IPlumberConfig.ServiceProvider*
  commentId: Overload:MicroPlumberd.IPlumberConfig.ServiceProvider
  href: MicroPlumberd.IPlumberConfig.html#MicroPlumberd_IPlumberConfig_ServiceProvider
  name: ServiceProvider
  nameWithType: IPlumberConfig.ServiceProvider
  fullName: MicroPlumberd.IPlumberConfig.ServiceProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Action{MicroPlumberd.IPlumber}
  commentId: T:System.Action{MicroPlumberd.IPlumber}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IPlumber>
  nameWithType: Action<IPlumber>
  fullName: System.Action<MicroPlumberd.IPlumber>
  nameWithType.vb: Action(Of IPlumber)
  fullName.vb: System.Action(Of MicroPlumberd.IPlumber)
  name.vb: Action(Of IPlumber)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy*
  commentId: Overload:MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy
  href: MicroPlumberd.IPlumberConfig.html#MicroPlumberd_IPlumberConfig_SetErrorHandlePolicy_System_Func_System_Exception_System_String_System_Threading_CancellationToken_System_Threading_Tasks_Task_MicroPlumberd_ErrorHandleDecision___
  name: SetErrorHandlePolicy
  nameWithType: IPlumberConfig.SetErrorHandlePolicy
  fullName: MicroPlumberd.IPlumberConfig.SetErrorHandlePolicy
- uid: System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}}
  commentId: T:System.Func{System.Exception,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{MicroPlumberd.ErrorHandleDecision}}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<Exception, string, CancellationToken, Task<ErrorHandleDecision>>
  nameWithType: Func<Exception, string, CancellationToken, Task<ErrorHandleDecision>>
  fullName: System.Func<System.Exception, string, System.Threading.CancellationToken, System.Threading.Tasks.Task<MicroPlumberd.ErrorHandleDecision>>
  nameWithType.vb: Func(Of Exception, String, CancellationToken, Task(Of ErrorHandleDecision))
  fullName.vb: System.Func(Of System.Exception, String, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of MicroPlumberd.ErrorHandleDecision))
  name.vb: Func(Of Exception, String, CancellationToken, Task(Of ErrorHandleDecision))
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MicroPlumberd.ErrorHandleDecision
    name: ErrorHandleDecision
    href: MicroPlumberd.ErrorHandleDecision.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.ErrorHandleDecision
    name: ErrorHandleDecision
    href: MicroPlumberd.ErrorHandleDecision.html
  - name: )
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
