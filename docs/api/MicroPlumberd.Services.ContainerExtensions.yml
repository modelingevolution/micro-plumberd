### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.Services.ContainerExtensions
  commentId: T:MicroPlumberd.Services.ContainerExtensions
  id: ContainerExtensions
  parent: MicroPlumberd.Services
  children:
  - MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - MicroPlumberd.Services.ContainerExtensions.AddCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.StreamPosition})
  - MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,MicroPlumberd.FromRelativeStreamPosition)
  - MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.FromStream})
  - MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,EventStore.Client.EventStoreClientSettings,System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  - MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings},System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  - MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: ContainerExtensions
  nameWithType: ContainerExtensions
  fullName: MicroPlumberd.Services.ContainerExtensions
  type: Class
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ContainerExtensions
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 22
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: public static class ContainerExtensions
    content.vb: Public Module ContainerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,EventStore.Client.EventStoreClientSettings,System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,EventStore.Client.EventStoreClientSettings,System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  id: AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,EventStore.Client.EventStoreClientSettings,System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddPlumberd(IServiceCollection, EventStoreClientSettings?, Action<IServiceProvider, IPlumberConfig>?)
  nameWithType: ContainerExtensions.AddPlumberd(IServiceCollection, EventStoreClientSettings?, Action<IServiceProvider, IPlumberConfig>?)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection, EventStore.Client.EventStoreClientSettings?, System.Action<System.IServiceProvider, MicroPlumberd.IPlumberConfig>?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddPlumberd
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 24
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: public static IServiceCollection AddPlumberd(this IServiceCollection collection, EventStoreClientSettings? settings = null, Action<IServiceProvider, IPlumberConfig>? configure = null)
    parameters:
    - id: collection
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: settings
      type: EventStore.Client.EventStoreClientSettings
    - id: configure
      type: System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddPlumberd(collection As IServiceCollection, settings As EventStoreClientSettings = Nothing, configure As Action(Of IServiceProvider, IPlumberConfig) = Nothing) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddPlumberd*
  nameWithType.vb: ContainerExtensions.AddPlumberd(IServiceCollection, EventStoreClientSettings, Action(Of IServiceProvider, IPlumberConfig))
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection, EventStore.Client.EventStoreClientSettings, System.Action(Of System.IServiceProvider, MicroPlumberd.IPlumberConfig))
  name.vb: AddPlumberd(IServiceCollection, EventStoreClientSettings, Action(Of IServiceProvider, IPlumberConfig))
- uid: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings},System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings},System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  id: AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings},System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig})
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddPlumberd(IServiceCollection, Func<IServiceProvider, EventStoreClientSettings>, Action<IServiceProvider, IPlumberConfig>?)
  nameWithType: ContainerExtensions.AddPlumberd(IServiceCollection, Func<IServiceProvider, EventStoreClientSettings>, Action<IServiceProvider, IPlumberConfig>?)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<System.IServiceProvider, EventStore.Client.EventStoreClientSettings>, System.Action<System.IServiceProvider, MicroPlumberd.IPlumberConfig>?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddPlumberd
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 28
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: public static IServiceCollection AddPlumberd(this IServiceCollection collection, Func<IServiceProvider, EventStoreClientSettings> settingsFactory, Action<IServiceProvider, IPlumberConfig>? configure = null)
    parameters:
    - id: collection
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: settingsFactory
      type: System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings}
    - id: configure
      type: System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddPlumberd(collection As IServiceCollection, settingsFactory As Func(Of IServiceProvider, EventStoreClientSettings), configure As Action(Of IServiceProvider, IPlumberConfig) = Nothing) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddPlumberd*
  nameWithType.vb: ContainerExtensions.AddPlumberd(IServiceCollection, Func(Of IServiceProvider, EventStoreClientSettings), Action(Of IServiceProvider, IPlumberConfig))
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddPlumberd(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of System.IServiceProvider, EventStore.Client.EventStoreClientSettings), System.Action(Of System.IServiceProvider, MicroPlumberd.IPlumberConfig))
  name.vb: AddPlumberd(IServiceCollection, Func(Of IServiceProvider, EventStoreClientSettings), Action(Of IServiceProvider, IPlumberConfig))
- uid: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddBackgroundServiceIfMissing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddBackgroundServiceIfMissing<TService>(IServiceCollection)
  nameWithType: ContainerExtensions.AddBackgroundServiceIfMissing<TService>(IServiceCollection)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddBackgroundServiceIfMissing
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 45
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: 'public static IServiceCollection AddBackgroundServiceIfMissing<TService>(this IServiceCollection services) where TService : BackgroundService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddBackgroundServiceIfMissing(Of TService As BackgroundService)(services As IServiceCollection) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing*
  nameWithType.vb: ContainerExtensions.AddBackgroundServiceIfMissing(Of TService)(IServiceCollection)
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddBackgroundServiceIfMissing(Of TService)(IServiceCollection)
- uid: MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.FromStream})
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.FromStream})
  id: AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.FromStream})
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddEventHandler<TEventHandler>(IServiceCollection, bool, FromStream?)
  nameWithType: ContainerExtensions.AddEventHandler<TEventHandler>(IServiceCollection, bool, FromStream?)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddEventHandler<TEventHandler>(Microsoft.Extensions.DependencyInjection.IServiceCollection, bool, EventStore.Client.FromStream?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddEventHandler
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 61
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: 'public static IServiceCollection AddEventHandler<TEventHandler>(this IServiceCollection services, bool persistently = false, FromStream? start = null) where TEventHandler : class, IEventHandler, ITypeRegister'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: persistently
      type: System.Boolean
    - id: start
      type: System.Nullable{EventStore.Client.FromStream}
    typeParameters:
    - id: TEventHandler
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddEventHandler(Of TEventHandler As {Class, IEventHandler, ITypeRegister})(services As IServiceCollection, persistently As Boolean = False, start As FromStream? = Nothing) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddEventHandler*
  nameWithType.vb: ContainerExtensions.AddEventHandler(Of TEventHandler)(IServiceCollection, Boolean, FromStream?)
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddEventHandler(Of TEventHandler)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Boolean, EventStore.Client.FromStream?)
  name.vb: AddEventHandler(Of TEventHandler)(IServiceCollection, Boolean, FromStream?)
- uid: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddStateEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddStateEventHandler<TEventHandler>(IServiceCollection)
  nameWithType: ContainerExtensions.AddStateEventHandler<TEventHandler>(IServiceCollection)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler<TEventHandler>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddStateEventHandler
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 70
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: 'public static IServiceCollection AddStateEventHandler<TEventHandler>(this IServiceCollection services) where TEventHandler : class, IEventHandler, ITypeRegister'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TEventHandler
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddStateEventHandler(Of TEventHandler As {Class, IEventHandler, ITypeRegister})(services As IServiceCollection) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler*
  nameWithType.vb: ContainerExtensions.AddStateEventHandler(Of TEventHandler)(IServiceCollection)
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler(Of TEventHandler)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddStateEventHandler(Of TEventHandler)(IServiceCollection)
- uid: MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,MicroPlumberd.FromRelativeStreamPosition)
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,MicroPlumberd.FromRelativeStreamPosition)
  id: AddEventHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,MicroPlumberd.FromRelativeStreamPosition)
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddEventHandler<TEventHandler>(IServiceCollection, FromRelativeStreamPosition)
  nameWithType: ContainerExtensions.AddEventHandler<TEventHandler>(IServiceCollection, FromRelativeStreamPosition)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddEventHandler<TEventHandler>(Microsoft.Extensions.DependencyInjection.IServiceCollection, MicroPlumberd.FromRelativeStreamPosition)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddEventHandler
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 79
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: 'public static IServiceCollection AddEventHandler<TEventHandler>(this IServiceCollection services, FromRelativeStreamPosition start) where TEventHandler : class, IEventHandler, ITypeRegister'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: start
      type: MicroPlumberd.FromRelativeStreamPosition
    typeParameters:
    - id: TEventHandler
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddEventHandler(Of TEventHandler As {Class, IEventHandler, ITypeRegister})(services As IServiceCollection, start As FromRelativeStreamPosition) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddEventHandler*
  nameWithType.vb: ContainerExtensions.AddEventHandler(Of TEventHandler)(IServiceCollection, FromRelativeStreamPosition)
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddEventHandler(Of TEventHandler)(Microsoft.Extensions.DependencyInjection.IServiceCollection, MicroPlumberd.FromRelativeStreamPosition)
  name.vb: AddEventHandler(Of TEventHandler)(IServiceCollection, FromRelativeStreamPosition)
- uid: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.Services.ContainerExtensions.AddCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.StreamPosition})
  id: AddCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{EventStore.Client.StreamPosition})
  isExtensionMethod: true
  parent: MicroPlumberd.Services.ContainerExtensions
  langs:
  - csharp
  - vb
  name: AddCommandHandler<TCommandHandler>(IServiceCollection, bool, StreamPosition?)
  nameWithType: ContainerExtensions.AddCommandHandler<TCommandHandler>(IServiceCollection, bool, StreamPosition?)
  fullName: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler<TCommandHandler>(Microsoft.Extensions.DependencyInjection.IServiceCollection, bool, EventStore.Client.StreamPosition?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd.Services/ContainerExtensions.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AddCommandHandler
    path: src/MicroPlumberd.Services/ContainerExtensions.cs
    startLine: 88
  assemblies:
  - MicroPlumberd.Services
  namespace: MicroPlumberd.Services
  syntax:
    content: 'public static IServiceCollection AddCommandHandler<TCommandHandler>(this IServiceCollection services, bool persistently = false, StreamPosition? start = null) where TCommandHandler : ICommandHandler, IServiceTypeRegister'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: persistently
      type: System.Boolean
    - id: start
      type: System.Nullable{EventStore.Client.StreamPosition}
    typeParameters:
    - id: TCommandHandler
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddCommandHandler(Of TCommandHandler As {ICommandHandler, IServiceTypeRegister})(services As IServiceCollection, persistently As Boolean = False, start As StreamPosition? = Nothing) As IServiceCollection
  overload: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler*
  nameWithType.vb: ContainerExtensions.AddCommandHandler(Of TCommandHandler)(IServiceCollection, Boolean, StreamPosition?)
  fullName.vb: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler(Of TCommandHandler)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Boolean, EventStore.Client.StreamPosition?)
  name.vb: AddCommandHandler(Of TCommandHandler)(IServiceCollection, Boolean, StreamPosition?)
references:
- uid: MicroPlumberd.Services
  commentId: N:MicroPlumberd.Services
  href: MicroPlumberd.html
  name: MicroPlumberd.Services
  nameWithType: MicroPlumberd.Services
  fullName: MicroPlumberd.Services
  spec.csharp:
  - uid: MicroPlumberd
    name: MicroPlumberd
    href: MicroPlumberd.html
  - name: .
  - uid: MicroPlumberd.Services
    name: Services
    href: MicroPlumberd.Services.html
  spec.vb:
  - uid: MicroPlumberd
    name: MicroPlumberd
    href: MicroPlumberd.html
  - name: .
  - uid: MicroPlumberd.Services
    name: Services
    href: MicroPlumberd.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MicroPlumberd.Services.ContainerExtensions.AddPlumberd*
  commentId: Overload:MicroPlumberd.Services.ContainerExtensions.AddPlumberd
  href: MicroPlumberd.Services.ContainerExtensions.html#MicroPlumberd_Services_ContainerExtensions_AddPlumberd_Microsoft_Extensions_DependencyInjection_IServiceCollection_EventStore_Client_EventStoreClientSettings_System_Action_System_IServiceProvider_MicroPlumberd_IPlumberConfig__
  name: AddPlumberd
  nameWithType: ContainerExtensions.AddPlumberd
  fullName: MicroPlumberd.Services.ContainerExtensions.AddPlumberd
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: EventStore.Client.EventStoreClientSettings
  commentId: T:EventStore.Client.EventStoreClientSettings
  parent: EventStore.Client
  isExternal: true
  name: EventStoreClientSettings
  nameWithType: EventStoreClientSettings
  fullName: EventStore.Client.EventStoreClientSettings
- uid: System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig}
  commentId: T:System.Action{System.IServiceProvider,MicroPlumberd.IPlumberConfig}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<IServiceProvider, IPlumberConfig>
  nameWithType: Action<IServiceProvider, IPlumberConfig>
  fullName: System.Action<System.IServiceProvider, MicroPlumberd.IPlumberConfig>
  nameWithType.vb: Action(Of IServiceProvider, IPlumberConfig)
  fullName.vb: System.Action(Of System.IServiceProvider, MicroPlumberd.IPlumberConfig)
  name.vb: Action(Of IServiceProvider, IPlumberConfig)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: EventStore.Client
  commentId: N:EventStore.Client
  isExternal: true
  name: EventStore.Client
  nameWithType: EventStore.Client
  fullName: EventStore.Client
  spec.csharp:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
  spec.vb:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings}
  commentId: T:System.Func{System.IServiceProvider,EventStore.Client.EventStoreClientSettings}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, EventStoreClientSettings>
  nameWithType: Func<IServiceProvider, EventStoreClientSettings>
  fullName: System.Func<System.IServiceProvider, EventStore.Client.EventStoreClientSettings>
  nameWithType.vb: Func(Of IServiceProvider, EventStoreClientSettings)
  fullName.vb: System.Func(Of System.IServiceProvider, EventStore.Client.EventStoreClientSettings)
  name.vb: Func(Of IServiceProvider, EventStoreClientSettings)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: EventStore.Client.EventStoreClientSettings
    name: EventStoreClientSettings
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: EventStore.Client.EventStoreClientSettings
    name: EventStoreClientSettings
    isExternal: true
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing*
  commentId: Overload:MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing
  href: MicroPlumberd.Services.ContainerExtensions.html#MicroPlumberd_Services_ContainerExtensions_AddBackgroundServiceIfMissing__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddBackgroundServiceIfMissing
  nameWithType: ContainerExtensions.AddBackgroundServiceIfMissing
  fullName: MicroPlumberd.Services.ContainerExtensions.AddBackgroundServiceIfMissing
- uid: MicroPlumberd.Services.ContainerExtensions.AddEventHandler*
  commentId: Overload:MicroPlumberd.Services.ContainerExtensions.AddEventHandler
  href: MicroPlumberd.Services.ContainerExtensions.html#MicroPlumberd_Services_ContainerExtensions_AddEventHandler__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Boolean_System_Nullable_EventStore_Client_FromStream__
  name: AddEventHandler
  nameWithType: ContainerExtensions.AddEventHandler
  fullName: MicroPlumberd.Services.ContainerExtensions.AddEventHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable{EventStore.Client.FromStream}
  commentId: T:System.Nullable{EventStore.Client.FromStream}
  parent: System
  definition: System.Nullable`1
  name: FromStream?
  nameWithType: FromStream?
  fullName: EventStore.Client.FromStream?
  spec.csharp:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler*
  commentId: Overload:MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler
  href: MicroPlumberd.Services.ContainerExtensions.html#MicroPlumberd_Services_ContainerExtensions_AddStateEventHandler__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddStateEventHandler
  nameWithType: ContainerExtensions.AddStateEventHandler
  fullName: MicroPlumberd.Services.ContainerExtensions.AddStateEventHandler
- uid: MicroPlumberd.FromRelativeStreamPosition
  commentId: T:MicroPlumberd.FromRelativeStreamPosition
  parent: MicroPlumberd
  href: MicroPlumberd.FromRelativeStreamPosition.html
  name: FromRelativeStreamPosition
  nameWithType: FromRelativeStreamPosition
  fullName: MicroPlumberd.FromRelativeStreamPosition
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler*
  commentId: Overload:MicroPlumberd.Services.ContainerExtensions.AddCommandHandler
  href: MicroPlumberd.Services.ContainerExtensions.html#MicroPlumberd_Services_ContainerExtensions_AddCommandHandler__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Boolean_System_Nullable_EventStore_Client_StreamPosition__
  name: AddCommandHandler
  nameWithType: ContainerExtensions.AddCommandHandler
  fullName: MicroPlumberd.Services.ContainerExtensions.AddCommandHandler
- uid: System.Nullable{EventStore.Client.StreamPosition}
  commentId: T:System.Nullable{EventStore.Client.StreamPosition}
  parent: System
  definition: System.Nullable`1
  name: StreamPosition?
  nameWithType: StreamPosition?
  fullName: EventStore.Client.StreamPosition?
  spec.csharp:
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
