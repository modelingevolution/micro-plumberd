### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.IProjectionRegister
  commentId: T:MicroPlumberd.IProjectionRegister
  id: IProjectionRegister
  parent: MicroPlumberd
  children:
  - MicroPlumberd.IProjectionRegister.Get(System.String)
  langs:
  - csharp
  - vb
  name: IProjectionRegister
  nameWithType: IProjectionRegister
  fullName: MicroPlumberd.IProjectionRegister
  type: Interface
  source:
    remote:
      path: src/MicroPlumberd/ProjectionRegister.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: IProjectionRegister
    path: src/MicroPlumberd/ProjectionRegister.cs
    startLine: 5
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public interface IProjectionRegister
    content.vb: Public Interface IProjectionRegister
- uid: MicroPlumberd.IProjectionRegister.Get(System.String)
  commentId: M:MicroPlumberd.IProjectionRegister.Get(System.String)
  id: Get(System.String)
  parent: MicroPlumberd.IProjectionRegister
  langs:
  - csharp
  - vb
  name: Get(string)
  nameWithType: IProjectionRegister.Get(string)
  fullName: MicroPlumberd.IProjectionRegister.Get(string)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/ProjectionRegister.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Get
    path: src/MicroPlumberd/ProjectionRegister.cs
    startLine: 7
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: Task<ProjectionDetails?> Get(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.ProjectionDetails}
    content.vb: Function [Get](name As String) As Task(Of ProjectionDetails)
  overload: MicroPlumberd.IProjectionRegister.Get*
  nameWithType.vb: IProjectionRegister.Get(String)
  fullName.vb: MicroPlumberd.IProjectionRegister.Get(String)
  name.vb: Get(String)
references:
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: MicroPlumberd.IProjectionRegister.Get*
  commentId: Overload:MicroPlumberd.IProjectionRegister.Get
  href: MicroPlumberd.IProjectionRegister.html#MicroPlumberd_IProjectionRegister_Get_System_String_
  name: Get
  nameWithType: IProjectionRegister.Get
  fullName: MicroPlumberd.IProjectionRegister.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{EventStore.Client.ProjectionDetails}
  commentId: T:System.Threading.Tasks.Task{EventStore.Client.ProjectionDetails}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ProjectionDetails>
  nameWithType: Task<ProjectionDetails>
  fullName: System.Threading.Tasks.Task<EventStore.Client.ProjectionDetails>
  nameWithType.vb: Task(Of ProjectionDetails)
  fullName.vb: System.Threading.Tasks.Task(Of EventStore.Client.ProjectionDetails)
  name.vb: Task(Of ProjectionDetails)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EventStore.Client.ProjectionDetails
    name: ProjectionDetails
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EventStore.Client.ProjectionDetails
    name: ProjectionDetails
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
