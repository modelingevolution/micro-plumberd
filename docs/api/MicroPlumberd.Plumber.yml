### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.Plumber
  commentId: T:MicroPlumberd.Plumber
  id: Plumber
  parent: MicroPlumberd
  children:
  - MicroPlumberd.Plumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  - MicroPlumberd.Plumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  - MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  - MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  - MicroPlumberd.Plumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  - MicroPlumberd.Plumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  - MicroPlumberd.Plumber.Client
  - MicroPlumberd.Plumber.Config
  - MicroPlumberd.Plumber.Conventions
  - MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  - MicroPlumberd.Plumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  - MicroPlumberd.Plumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  - MicroPlumberd.Plumber.GetExtension``1
  - MicroPlumberd.Plumber.GetSnapshot(System.Object,System.Type)
  - MicroPlumberd.Plumber.GetSnapshot``1(System.Guid)
  - MicroPlumberd.Plumber.Get``1(System.Object)
  - MicroPlumberd.Plumber.PersistentSubscriptionClient
  - MicroPlumberd.Plumber.ProjectionManagementClient
  - MicroPlumberd.Plumber.ProjectionRegister
  - MicroPlumberd.Plumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  - MicroPlumberd.Plumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  - MicroPlumberd.Plumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  - MicroPlumberd.Plumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  - MicroPlumberd.Plumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  - MicroPlumberd.Plumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  - MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  - MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  - MicroPlumberd.Plumber.SerializerFactory
  - MicroPlumberd.Plumber.ServiceProvider
  - MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  - MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  - MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  - MicroPlumberd.Plumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  - MicroPlumberd.Plumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  - MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  - MicroPlumberd.Plumber.SubscribeSet
  - MicroPlumberd.Plumber.TypeHandlerRegisters
  langs:
  - csharp
  - vb
  name: Plumber
  nameWithType: Plumber
  fullName: MicroPlumberd.Plumber
  type: Class
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Plumber
    path: src/MicroPlumberd/Plumber.cs
    startLine: 10
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Root class for ED plumbing.
  example: []
  syntax:
    content: 'public class Plumber : IPlumber, IPlumberReadOnlyConfig, IExtension'
    content.vb: Public Class Plumber Implements IPlumber, IPlumberReadOnlyConfig, IExtension
  inheritance:
  - System.Object
  implements:
  - MicroPlumberd.IPlumber
  - MicroPlumberd.IPlumberReadOnlyConfig
  - MicroPlumberd.IExtension
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MicroPlumberd.IPlumber.MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  - MicroPlumberd.IPlumberReadOnlyConfig.MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig
- uid: MicroPlumberd.Plumber.Config
  commentId: P:MicroPlumberd.Plumber.Config
  id: Config
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Plumber.Config
  fullName: MicroPlumberd.Plumber.Config
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Config
    path: src/MicroPlumberd/Plumber.cs
    startLine: 30
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Plubers configuration.
  example: []
  syntax:
    content: public IPlumberReadOnlyConfig Config { get; }
    parameters: []
    return:
      type: MicroPlumberd.IPlumberReadOnlyConfig
    content.vb: Public ReadOnly Property Config As IPlumberReadOnlyConfig
  overload: MicroPlumberd.Plumber.Config*
  implements:
  - MicroPlumberd.IPlumber.Config
- uid: MicroPlumberd.Plumber.TypeHandlerRegisters
  commentId: P:MicroPlumberd.Plumber.TypeHandlerRegisters
  id: TypeHandlerRegisters
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: TypeHandlerRegisters
  nameWithType: Plumber.TypeHandlerRegisters
  fullName: MicroPlumberd.Plumber.TypeHandlerRegisters
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: TypeHandlerRegisters
    path: src/MicroPlumberd/Plumber.cs
    startLine: 32
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Metadata information about registered event-handlers.
  example: []
  syntax:
    content: public ITypeHandlerRegisters TypeHandlerRegisters { get; }
    parameters: []
    return:
      type: MicroPlumberd.ITypeHandlerRegisters
    content.vb: Public ReadOnly Property TypeHandlerRegisters As ITypeHandlerRegisters
  overload: MicroPlumberd.Plumber.TypeHandlerRegisters*
  implements:
  - MicroPlumberd.IPlumber.TypeHandlerRegisters
- uid: MicroPlumberd.Plumber.Client
  commentId: P:MicroPlumberd.Plumber.Client
  id: Client
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Plumber.Client
  fullName: MicroPlumberd.Plumber.Client
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Client
    path: src/MicroPlumberd/Plumber.cs
    startLine: 33
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: EventStore's client
  example: []
  syntax:
    content: public EventStoreClient Client { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStoreClient
    content.vb: Public ReadOnly Property Client As EventStoreClient
  overload: MicroPlumberd.Plumber.Client*
  implements:
  - MicroPlumberd.IPlumber.Client
- uid: MicroPlumberd.Plumber.ProjectionRegister
  commentId: P:MicroPlumberd.Plumber.ProjectionRegister
  id: ProjectionRegister
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ProjectionRegister
  nameWithType: Plumber.ProjectionRegister
  fullName: MicroPlumberd.Plumber.ProjectionRegister
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ProjectionRegister
    path: src/MicroPlumberd/Plumber.cs
    startLine: 35
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Projection's register, responsible for caching information about projection from EventStore.
  example: []
  syntax:
    content: public IProjectionRegister ProjectionRegister { get; }
    parameters: []
    return:
      type: MicroPlumberd.IProjectionRegister
    content.vb: Public ReadOnly Property ProjectionRegister As IProjectionRegister
  overload: MicroPlumberd.Plumber.ProjectionRegister*
  implements:
  - MicroPlumberd.IPlumber.ProjectionRegister
- uid: MicroPlumberd.Plumber.PersistentSubscriptionClient
  commentId: P:MicroPlumberd.Plumber.PersistentSubscriptionClient
  id: PersistentSubscriptionClient
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionClient
  nameWithType: Plumber.PersistentSubscriptionClient
  fullName: MicroPlumberd.Plumber.PersistentSubscriptionClient
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: PersistentSubscriptionClient
    path: src/MicroPlumberd/Plumber.cs
    startLine: 38
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: EventStore's persistent subsctiption client
  example: []
  syntax:
    content: public EventStorePersistentSubscriptionsClient PersistentSubscriptionClient { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStorePersistentSubscriptionsClient
    content.vb: Public ReadOnly Property PersistentSubscriptionClient As EventStorePersistentSubscriptionsClient
  overload: MicroPlumberd.Plumber.PersistentSubscriptionClient*
  implements:
  - MicroPlumberd.IPlumber.PersistentSubscriptionClient
- uid: MicroPlumberd.Plumber.ProjectionManagementClient
  commentId: P:MicroPlumberd.Plumber.ProjectionManagementClient
  id: ProjectionManagementClient
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ProjectionManagementClient
  nameWithType: Plumber.ProjectionManagementClient
  fullName: MicroPlumberd.Plumber.ProjectionManagementClient
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ProjectionManagementClient
    path: src/MicroPlumberd/Plumber.cs
    startLine: 39
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: EventStore's projection managemenet client
  example: []
  syntax:
    content: public EventStoreProjectionManagementClient ProjectionManagementClient { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStoreProjectionManagementClient
    content.vb: Public ReadOnly Property ProjectionManagementClient As EventStoreProjectionManagementClient
  overload: MicroPlumberd.Plumber.ProjectionManagementClient*
  implements:
  - MicroPlumberd.IPlumber.ProjectionManagementClient
- uid: MicroPlumberd.Plumber.ServiceProvider
  commentId: P:MicroPlumberd.Plumber.ServiceProvider
  id: ServiceProvider
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: Plumber.ServiceProvider
  fullName: MicroPlumberd.Plumber.ServiceProvider
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ServiceProvider
    path: src/MicroPlumberd/Plumber.cs
    startLine: 43
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: ''
  example: []
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    parameters: []
    return:
      type: System.IServiceProvider
    content.vb: Public ReadOnly Property ServiceProvider As IServiceProvider
  overload: MicroPlumberd.Plumber.ServiceProvider*
  implements:
  - MicroPlumberd.IPlumberReadOnlyConfig.ServiceProvider
- uid: MicroPlumberd.Plumber.SerializerFactory
  commentId: P:MicroPlumberd.Plumber.SerializerFactory
  id: SerializerFactory
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SerializerFactory
  nameWithType: Plumber.SerializerFactory
  fullName: MicroPlumberd.Plumber.SerializerFactory
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SerializerFactory
    path: src/MicroPlumberd/Plumber.cs
    startLine: 44
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: public Func<Type, IObjectSerializer> SerializerFactory { get; }
    parameters: []
    return:
      type: System.Func{System.Type,MicroPlumberd.IObjectSerializer}
    content.vb: Public ReadOnly Property SerializerFactory As Func(Of Type, IObjectSerializer)
  overload: MicroPlumberd.Plumber.SerializerFactory*
  implements:
  - MicroPlumberd.IPlumberReadOnlyConfig.SerializerFactory
- uid: MicroPlumberd.Plumber.Conventions
  commentId: P:MicroPlumberd.Plumber.Conventions
  id: Conventions
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Conventions
  nameWithType: Plumber.Conventions
  fullName: MicroPlumberd.Plumber.Conventions
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Conventions
    path: src/MicroPlumberd/Plumber.cs
    startLine: 45
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: public IReadOnlyConventions Conventions { get; }
    parameters: []
    return:
      type: MicroPlumberd.IReadOnlyConventions
    content.vb: Public ReadOnly Property Conventions As IReadOnlyConventions
  overload: MicroPlumberd.Plumber.Conventions*
  implements:
  - MicroPlumberd.IPlumberReadOnlyConfig.Conventions
- uid: MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  id: Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Subscribe(string, FromStream, UserCredentials?, CancellationToken)
  nameWithType: Plumber.Subscribe(string, FromStream, UserCredentials?, CancellationToken)
  fullName: MicroPlumberd.Plumber.Subscribe(string, EventStore.Client.FromStream, EventStore.Client.UserCredentials?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Subscribe
    path: src/MicroPlumberd/Plumber.cs
    startLine: 47
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Subscribes the specified stream name.
  example: []
  syntax:
    content: public ISubscriptionRunner Subscribe(string streamName, FromStream start, UserCredentials? userCredentials = null, CancellationToken cancellationToken = default)
    parameters:
    - id: streamName
      type: System.String
      description: Name of the stream.
    - id: start
      type: EventStore.Client.FromStream
      description: The start position
    - id: userCredentials
      type: EventStore.Client.UserCredentials
      description: The user credentials.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: MicroPlumberd.ISubscriptionRunner
      description: ''
    content.vb: Public Function Subscribe(streamName As String, start As FromStream, userCredentials As UserCredentials = Nothing, cancellationToken As CancellationToken = Nothing) As ISubscriptionRunner
  overload: MicroPlumberd.Plumber.Subscribe*
  implements:
  - MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  nameWithType.vb: Plumber.Subscribe(String, FromStream, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.Plumber.Subscribe(String, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: Subscribe(String, FromStream, UserCredentials, CancellationToken)
- uid: MicroPlumberd.Plumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.Plumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  id: SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeEventHandler<TEventHandler>(TEventHandler?, string?, FromStream?, bool)
  nameWithType: Plumber.SubscribeEventHandler<TEventHandler>(TEventHandler?, string?, FromStream?, bool)
  fullName: MicroPlumberd.Plumber.SubscribeEventHandler<TEventHandler>(TEventHandler?, string?, EventStore.Client.FromStream?, bool)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeEventHandler
    path: src/MicroPlumberd/Plumber.cs
    startLine: 54
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: >-
    Subscribes the event handler. EventHandler is a class that contains many overloaded 'Given' methods. A projection will be created at EventStore that creates a joined stream from all supported event-types by EventHandler.

    Then EventHandler subscribe the the output stream.
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeEventHandler<TEventHandler>(TEventHandler? eh = null, string? outputStream = null, FromStream? start = null, bool ensureOutputStreamProjection = true) where TEventHandler : class, IEventHandler, ITypeRegister'
    parameters:
    - id: eh
      type: '{TEventHandler}'
      description: The event-handler/model
    - id: outputStream
      type: System.String
      description: The output stream.
    - id: start
      type: System.Nullable{EventStore.Client.FromStream}
      description: The start.
    - id: ensureOutputStreamProjection
      type: System.Boolean
      description: if set to <code>true</code> [ensure output stream projection].
    typeParameters:
    - id: TEventHandler
      description: The type of the event handler.
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
      description: ''
    content.vb: Public Function SubscribeEventHandler(Of TEventHandler As {Class, IEventHandler, ITypeRegister})(eh As TEventHandler = Nothing, outputStream As String = Nothing, start As FromStream? = Nothing, ensureOutputStreamProjection As Boolean = True) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeEventHandler*
  implements:
  - MicroPlumberd.IPlumber.SubscribeEventHandler``1({TEventHandler},System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  nameWithType.vb: Plumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.Plumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
- uid: MicroPlumberd.Plumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.Plumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  id: SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>?, TEventHandler?, string?, FromStream?, bool)
  nameWithType: Plumber.SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>?, TEventHandler?, string?, FromStream?, bool)
  fullName: MicroPlumberd.Plumber.SubscribeEventHandler<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>?, TEventHandler?, string?, EventStore.Client.FromStream?, bool)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeEventHandler
    path: src/MicroPlumberd/Plumber.cs
    startLine: 64
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: >-
    Subscribes the event handler. EventHandler is a class that contains many overloaded 'Given' methods. A projection will be created at EventStore that creates a joined stream from all supported event-types by EventHandler.

    Then EventHandler subscribe the the output stream.
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeEventHandler<TEventHandler>(TypeEventConverter mapFunc, IEnumerable<string>? eventTypes, TEventHandler? eh = null, string? outputStream = null, FromStream? start = null, bool ensureOutputStreamProjection = true) where TEventHandler : class, IEventHandler'
    parameters:
    - id: mapFunc
      type: MicroPlumberd.TypeEventConverter
      description: The map function.
    - id: eventTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Supported event types.
    - id: eh
      type: '{TEventHandler}'
      description: The event-handler
    - id: outputStream
      type: System.String
      description: The output stream.
    - id: start
      type: System.Nullable{EventStore.Client.FromStream}
      description: The start of the stream
    - id: ensureOutputStreamProjection
      type: System.Boolean
      description: if set to <code>true</code> [ensure output stream projection].
    typeParameters:
    - id: TEventHandler
      description: The type of the event handler.
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
      description: ''
    content.vb: Public Function SubscribeEventHandler(Of TEventHandler As {Class, IEventHandler})(mapFunc As TypeEventConverter, eventTypes As IEnumerable(Of String), eh As TEventHandler = Nothing, outputStream As String = Nothing, start As FromStream? = Nothing, ensureOutputStreamProjection As Boolean = True) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeEventHandler*
  implements:
  - MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},{TEventHandler},System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  nameWithType.vb: Plumber.SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.Plumber.SubscribeEventHandler(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
- uid: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  id: SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>?, TEventHandler?, string?, string?, IPosition?, bool)
  nameWithType: Plumber.SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>?, TEventHandler?, string?, string?, IPosition?, bool)
  fullName: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>?, TEventHandler?, string?, string?, EventStore.Client.IPosition?, bool)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeEventHandlerPersistently
    path: src/MicroPlumberd/Plumber.cs
    startLine: 82
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Subscribes the event handler persistently. This means that at least once an event is processed successfully, it wont be processed anymore.
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter mapFunc, IEnumerable<string>? events, TEventHandler? model, string? outputStream = null, string? groupName = null, IPosition? startFrom = null, bool ensureOutputStreamProjection = true) where TEventHandler : class, IEventHandler'
    parameters:
    - id: mapFunc
      type: MicroPlumberd.TypeEventConverter
      description: The map function.
    - id: events
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The events.
    - id: model
      type: '{TEventHandler}'
      description: The model.
    - id: outputStream
      type: System.String
      description: The output stream.
    - id: groupName
      type: System.String
      description: Name of the group.
    - id: startFrom
      type: EventStore.Client.IPosition
      description: The start from.
    - id: ensureOutputStreamProjection
      type: System.Boolean
      description: if set to <code>true</code> [ensure output stream projection].
    typeParameters:
    - id: TEventHandler
      description: The type of the event handler.
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
      description: ''
    content.vb: Public Function SubscribeEventHandlerPersistently(Of TEventHandler As {Class, IEventHandler})(mapFunc As TypeEventConverter, events As IEnumerable(Of String), model As TEventHandler, outputStream As String = Nothing, groupName As String = Nothing, startFrom As IPosition = Nothing, ensureOutputStreamProjection As Boolean = True) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently*
  implements:
  - MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},{TEventHandler},System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  nameWithType.vb: Plumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
- uid: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.Plumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  id: SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler?, string?, string?, IPosition?, bool)
  nameWithType: Plumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler?, string?, string?, IPosition?, bool)
  fullName: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler?, string?, string?, EventStore.Client.IPosition?, bool)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeEventHandlerPersistently
    path: src/MicroPlumberd/Plumber.cs
    startLine: 115
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: >-
    Subscribes the event handler persistently. EventHandler is a class that contains many overloaded 'Given' methods. A projection will be created at EventStore that creates a joined stream from all supported event-types by EventHandler.

    Then EventHandler subscribe the the output stream.
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler? model, string? outputStream = null, string? groupName = null, IPosition? startFrom = null, bool ensureOutputStreamProjection = true) where TEventHandler : class, IEventHandler, ITypeRegister'
    parameters:
    - id: model
      type: '{TEventHandler}'
      description: Optional event-handler/model.
    - id: outputStream
      type: System.String
      description: Optional output stream.
    - id: groupName
      type: System.String
      description: Optional group name.
    - id: startFrom
      type: EventStore.Client.IPosition
      description: Optional start of the stream.
    - id: ensureOutputStreamProjection
      type: System.Boolean
      description: when true creates projection that creates output's stream
    typeParameters:
    - id: TEventHandler
      description: The type of the event handler.
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
      description: ''
    content.vb: Public Function SubscribeEventHandlerPersistently(Of TEventHandler As {Class, IEventHandler, ITypeRegister})(model As TEventHandler, outputStream As String = Nothing, groupName As String = Nothing, startFrom As IPosition = Nothing, ensureOutputStreamProjection As Boolean = True) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently*
  implements:
  - MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1({TEventHandler},System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  nameWithType.vb: Plumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
- uid: MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  id: SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribePersistently(string, string, int, UserCredentials?, CancellationToken)
  nameWithType: Plumber.SubscribePersistently(string, string, int, UserCredentials?, CancellationToken)
  fullName: MicroPlumberd.Plumber.SubscribePersistently(string, string, int, EventStore.Client.UserCredentials?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribePersistently
    path: src/MicroPlumberd/Plumber.cs
    startLine: 126
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Returns a subscription builder that will subscribe model persistently.
  example: []
  syntax:
    content: public ISubscriptionRunner SubscribePersistently(string streamName, string groupName, int bufferSize = 10, UserCredentials? userCredentials = null, CancellationToken cancellationToken = default)
    parameters:
    - id: streamName
      type: System.String
      description: Name of the stream.
    - id: groupName
      type: System.String
      description: Name of the group.
    - id: bufferSize
      type: System.Int32
      description: Size of the buffer.
    - id: userCredentials
      type: EventStore.Client.UserCredentials
      description: The user credentials.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: MicroPlumberd.ISubscriptionRunner
      description: ''
    content.vb: Public Function SubscribePersistently(streamName As String, groupName As String, bufferSize As Integer = 10, userCredentials As UserCredentials = Nothing, cancellationToken As CancellationToken = Nothing) As ISubscriptionRunner
  overload: MicroPlumberd.Plumber.SubscribePersistently*
  implements:
  - MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  nameWithType.vb: Plumber.SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.Plumber.SubscribePersistently(String, String, Integer, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
- uid: MicroPlumberd.Plumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.Plumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  id: Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Rehydrate<T>(T, Guid, StreamPosition?)
  nameWithType: Plumber.Rehydrate<T>(T, Guid, StreamPosition?)
  fullName: MicroPlumberd.Plumber.Rehydrate<T>(T, System.Guid, EventStore.Client.StreamPosition?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Rehydrate
    path: src/MicroPlumberd/Plumber.cs
    startLine: 134
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Rehydrates the specified model
  example: []
  syntax:
    content: 'public Task Rehydrate<T>(T model, Guid id, StreamPosition? position = null) where T : IEventHandler, ITypeRegister'
    parameters:
    - id: model
      type: '{T}'
      description: The model.
    - id: id
      type: System.Guid
      description: The identifier.
    - id: position
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The position from which reply events.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Rehydrate(Of T As {IEventHandler, ITypeRegister})(model As T, id As Guid, position As StreamPosition? = Nothing) As Task
  overload: MicroPlumberd.Plumber.Rehydrate*
  implements:
  - MicroPlumberd.IPlumber.Rehydrate``1({T},System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  nameWithType.vb: Plumber.Rehydrate(Of T)(T, Guid, StreamPosition?)
  fullName.vb: MicroPlumberd.Plumber.Rehydrate(Of T)(T, System.Guid, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, Guid, StreamPosition?)
- uid: MicroPlumberd.Plumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.Plumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  id: Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Rehydrate<T>(T, string, StreamPosition?)
  nameWithType: Plumber.Rehydrate<T>(T, string, StreamPosition?)
  fullName: MicroPlumberd.Plumber.Rehydrate<T>(T, string, EventStore.Client.StreamPosition?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Rehydrate
    path: src/MicroPlumberd/Plumber.cs
    startLine: 141
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Rehydrates the specified model.
  example: []
  syntax:
    content: 'public Task Rehydrate<T>(T model, string streamId, StreamPosition? position = null) where T : IEventHandler, ITypeRegister'
    parameters:
    - id: model
      type: '{T}'
      description: The model.
    - id: streamId
      type: System.String
    - id: position
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The position.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Rehydrate(Of T As {IEventHandler, ITypeRegister})(model As T, streamId As String, position As StreamPosition? = Nothing) As Task
  overload: MicroPlumberd.Plumber.Rehydrate*
  implements:
  - MicroPlumberd.IPlumber.Rehydrate``1({T},System.String,System.Nullable{EventStore.Client.StreamPosition})
  nameWithType.vb: Plumber.Rehydrate(Of T)(T, String, StreamPosition?)
  fullName.vb: MicroPlumberd.Plumber.Rehydrate(Of T)(T, String, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, String, StreamPosition?)
- uid: MicroPlumberd.Plumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  commentId: M:MicroPlumberd.Plumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  id: FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: FindEventInStream(string, Guid, TypeEventConverter, Direction)
  nameWithType: Plumber.FindEventInStream(string, Guid, TypeEventConverter, Direction)
  fullName: MicroPlumberd.Plumber.FindEventInStream(string, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: FindEventInStream
    path: src/MicroPlumberd/Plumber.cs
    startLine: 161
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Finds the event in the stream.
  example: []
  syntax:
    content: public Task<IEventRecord?> FindEventInStream(string streamId, Guid id, TypeEventConverter eventMapping, Direction scanDirection = Direction.Backwards)
    parameters:
    - id: streamId
      type: System.String
      description: The stream identifier.
    - id: id
      type: System.Guid
      description: The identifier of the event.
    - id: eventMapping
      type: MicroPlumberd.TypeEventConverter
      description: The event mapping.
    - id: scanDirection
      type: EventStore.Client.Direction
      description: The scan direction.
    return:
      type: System.Threading.Tasks.Task{MicroPlumberd.IEventRecord}
      description: ''
    content.vb: Public Function FindEventInStream(streamId As String, id As Guid, eventMapping As TypeEventConverter, scanDirection As Direction = Direction.Backwards) As Task(Of IEventRecord)
  overload: MicroPlumberd.Plumber.FindEventInStream*
  implements:
  - MicroPlumberd.IPlumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  nameWithType.vb: Plumber.FindEventInStream(String, Guid, TypeEventConverter, Direction)
  fullName.vb: MicroPlumberd.Plumber.FindEventInStream(String, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  name.vb: FindEventInStream(String, Guid, TypeEventConverter, Direction)
- uid: MicroPlumberd.Plumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  commentId: M:MicroPlumberd.Plumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  id: FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: FindEventInStream<TEvent>(string, Guid, TypeEventConverter?, Direction)
  nameWithType: Plumber.FindEventInStream<TEvent>(string, Guid, TypeEventConverter?, Direction)
  fullName: MicroPlumberd.Plumber.FindEventInStream<TEvent>(string, System.Guid, MicroPlumberd.TypeEventConverter?, EventStore.Client.Direction)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: FindEventInStream
    path: src/MicroPlumberd/Plumber.cs
    startLine: 167
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Finds the event in the stream.
  example: []
  syntax:
    content: public Task<IEventRecord<TEvent>?> FindEventInStream<TEvent>(string streamId, Guid id, TypeEventConverter? eventMapping = null, Direction scanDirection = Direction.Backwards)
    parameters:
    - id: streamId
      type: System.String
      description: The stream identifier.
    - id: id
      type: System.Guid
      description: The identifier of the event.
    - id: eventMapping
      type: MicroPlumberd.TypeEventConverter
      description: The event mapping.
    - id: scanDirection
      type: EventStore.Client.Direction
      description: The scan direction.
    typeParameters:
    - id: TEvent
    return:
      type: System.Threading.Tasks.Task{MicroPlumberd.IEventRecord{{TEvent}}}
      description: ''
    content.vb: Public Function FindEventInStream(Of TEvent)(streamId As String, id As Guid, eventMapping As TypeEventConverter = Nothing, scanDirection As Direction = Direction.Backwards) As Task(Of IEventRecord(Of TEvent))
  overload: MicroPlumberd.Plumber.FindEventInStream*
  implements:
  - MicroPlumberd.IPlumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  nameWithType.vb: Plumber.FindEventInStream(Of TEvent)(String, Guid, TypeEventConverter, Direction)
  fullName.vb: MicroPlumberd.Plumber.FindEventInStream(Of TEvent)(String, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  name.vb: FindEventInStream(Of TEvent)(String, Guid, TypeEventConverter, Direction)
- uid: MicroPlumberd.Plumber.SubscribeSet
  commentId: M:MicroPlumberd.Plumber.SubscribeSet
  id: SubscribeSet
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeSet()
  nameWithType: Plumber.SubscribeSet()
  fullName: MicroPlumberd.Plumber.SubscribeSet()
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeSet
    path: src/MicroPlumberd/Plumber.cs
    startLine: 199
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Returns a builder for creating composition of projections subscribed to a stream.
  example: []
  syntax:
    content: public ISubscriptionSet SubscribeSet()
    return:
      type: MicroPlumberd.ISubscriptionSet
      description: ''
    content.vb: Public Function SubscribeSet() As ISubscriptionSet
  overload: MicroPlumberd.Plumber.SubscribeSet*
  implements:
  - MicroPlumberd.IPlumber.SubscribeSet
- uid: MicroPlumberd.Plumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.Plumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  id: Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Read<TOwner>(object, StreamPosition?, Direction?, long)
  nameWithType: Plumber.Read<TOwner>(object, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.Plumber.Read<TOwner>(object, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Read
    path: src/MicroPlumberd/Plumber.cs
    startLine: 204
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Reads stream and returns events.
  example: []
  syntax:
    content: 'public IAsyncEnumerable<object> Read<TOwner>(object id, StreamPosition? start = null, Direction? direction = null, long maxCount = 9223372036854775807) where TOwner : ITypeRegister'
    parameters:
    - id: id
      type: System.Object
      description: The identifier (of the aggregate).
    - id: start
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The stream start position.
    - id: direction
      type: System.Nullable{EventStore.Client.Direction}
      description: The direction of the reading.
    - id: maxCount
      type: System.Int64
      description: The maximum number of read events.
    typeParameters:
    - id: TOwner
      description: The type of the owner (aggregate).
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Object}
      description: ''
    content.vb: Public Function Read(Of TOwner As ITypeRegister)(id As Object, start As StreamPosition? = Nothing, direction As Direction? = Nothing, maxCount As Long = 9223372036854775807) As IAsyncEnumerable(Of Object)
  overload: MicroPlumberd.Plumber.Read*
  implements:
  - MicroPlumberd.IPlumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  nameWithType.vb: Plumber.Read(Of TOwner)(Object, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.Plumber.Read(Of TOwner)(Object, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(Of TOwner)(Object, StreamPosition?, Direction?, Long)
- uid: MicroPlumberd.Plumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.Plumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  id: Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Read<TOwner>(StreamPosition?, Direction?, long)
  nameWithType: Plumber.Read<TOwner>(StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.Plumber.Read<TOwner>(EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Read
    path: src/MicroPlumberd/Plumber.cs
    startLine: 214
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Reads stream and returns events.
  example: []
  syntax:
    content: 'public IAsyncEnumerable<object> Read<TOwner>(StreamPosition? start = null, Direction? direction = null, long maxCount = 9223372036854775807) where TOwner : ITypeRegister'
    parameters:
    - id: start
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The stream start position.
    - id: direction
      type: System.Nullable{EventStore.Client.Direction}
      description: The direction of the reading.
    - id: maxCount
      type: System.Int64
      description: The maximum number of read events.
    typeParameters:
    - id: TOwner
      description: The type of the owner(aggregate).
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Object}
      description: ''
    content.vb: Public Function Read(Of TOwner As ITypeRegister)(start As StreamPosition? = Nothing, direction As Direction? = Nothing, maxCount As Long = 9223372036854775807) As IAsyncEnumerable(Of Object)
  overload: MicroPlumberd.Plumber.Read*
  implements:
  - MicroPlumberd.IPlumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  nameWithType.vb: Plumber.Read(Of TOwner)(StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.Plumber.Read(Of TOwner)(EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(Of TOwner)(StreamPosition?, Direction?, Long)
- uid: MicroPlumberd.Plumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.Plumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  id: ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ReadFull(string, TypeEventConverter, StreamPosition?, Direction?, long)
  nameWithType: Plumber.ReadFull(string, TypeEventConverter, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.Plumber.ReadFull(string, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ReadFull
    path: src/MicroPlumberd/Plumber.cs
    startLine: 222
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Reads stream and returns event and metadata information.
  example: []
  syntax:
    content: public IAsyncEnumerable<(object, Metadata)> ReadFull(string streamId, TypeEventConverter converter, StreamPosition? start = null, Direction? direction = null, long maxCount = 9223372036854775807)
    parameters:
    - id: streamId
      type: System.String
      description: The full stream name
    - id: converter
      type: MicroPlumberd.TypeEventConverter
      description: The event-map converter.
    - id: start
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The stream start position.
    - id: direction
      type: System.Nullable{EventStore.Client.Direction}
      description: The direction of the reading.
    - id: maxCount
      type: System.Int64
      description: The maximum number of read events.
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.ValueTuple{System.Object,MicroPlumberd.Metadata}}
      description: ''
    content.vb: Public Function ReadFull(streamId As String, converter As TypeEventConverter, start As StreamPosition? = Nothing, direction As Direction? = Nothing, maxCount As Long = 9223372036854775807) As IAsyncEnumerable(Of (Object, Metadata))
  overload: MicroPlumberd.Plumber.ReadFull*
  implements:
  - MicroPlumberd.IPlumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  nameWithType.vb: Plumber.ReadFull(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.Plumber.ReadFull(String, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: ReadFull(String, TypeEventConverter, StreamPosition?, Direction?, Long)
- uid: MicroPlumberd.Plumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.Plumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  id: Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Read(string, TypeEventConverter, StreamPosition?, Direction?, long)
  nameWithType: Plumber.Read(string, TypeEventConverter, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.Plumber.Read(string, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Read
    path: src/MicroPlumberd/Plumber.cs
    startLine: 239
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Reads stream and returns events.
  example: []
  syntax:
    content: public IAsyncEnumerable<object> Read(string streamId, TypeEventConverter converter, StreamPosition? start = null, Direction? direction = null, long maxCount = 9223372036854775807)
    parameters:
    - id: streamId
      type: System.String
      description: The full stream name
    - id: converter
      type: MicroPlumberd.TypeEventConverter
      description: The event-map converter.
    - id: start
      type: System.Nullable{EventStore.Client.StreamPosition}
      description: The stream start position.
    - id: direction
      type: System.Nullable{EventStore.Client.Direction}
      description: The direction of the reading.
    - id: maxCount
      type: System.Int64
      description: The maximum number of read events.
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Object}
      description: ''
    content.vb: Public Function Read(streamId As String, converter As TypeEventConverter, start As StreamPosition? = Nothing, direction As Direction? = Nothing, maxCount As Long = 9223372036854775807) As IAsyncEnumerable(Of Object)
  overload: MicroPlumberd.Plumber.Read*
  implements:
  - MicroPlumberd.IPlumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  nameWithType.vb: Plumber.Read(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.Plumber.Read(String, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(String, TypeEventConverter, StreamPosition?, Direction?, Long)
- uid: MicroPlumberd.Plumber.Get``1(System.Object)
  commentId: M:MicroPlumberd.Plumber.Get``1(System.Object)
  id: Get``1(System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Get<TOwner>(object)
  nameWithType: Plumber.Get<TOwner>(object)
  fullName: MicroPlumberd.Plumber.Get<TOwner>(object)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Get
    path: src/MicroPlumberd/Plumber.cs
    startLine: 256
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: >-
    Returns the aggregate identified by id.

    This usually mean that all the event will be loaded from the EventStoreDB and executed through 'Given' method on it's instance. 

    If the aggregate supports snapshoting, it's state will be loaded from latest snapshot and relevant events from that time will be replied on it's instance.
  example: []
  syntax:
    content: 'public Task<TOwner> Get<TOwner>(object id) where TOwner : IAggregate<TOwner>, ITypeRegister, IId'
    parameters:
    - id: id
      type: System.Object
      description: The identifier.
    typeParameters:
    - id: TOwner
    return:
      type: System.Threading.Tasks.Task{{TOwner}}
      description: ''
    content.vb: Public Function [Get](Of TOwner As {IAggregate(Of TOwner), ITypeRegister, IId})(id As Object) As Task(Of TOwner)
  overload: MicroPlumberd.Plumber.Get*
  implements:
  - MicroPlumberd.IPlumber.Get``1(System.Object)
  nameWithType.vb: Plumber.Get(Of TOwner)(Object)
  fullName.vb: MicroPlumberd.Plumber.Get(Of TOwner)(Object)
  name.vb: Get(Of TOwner)(Object)
- uid: MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  id: AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvents(string, StreamRevision, IEnumerable<object>, object?)
  nameWithType: Plumber.AppendEvents(string, StreamRevision, IEnumerable<object>, object?)
  fullName: MicroPlumberd.Plumber.AppendEvents(string, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable<object>, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvents
    path: src/MicroPlumberd/Plumber.cs
    startLine: 277
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends event to a stream, uses relevant convention to create metadata.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendEvents(string streamId, StreamRevision rev, IEnumerable<object> events, object? metadata = null)
    parameters:
    - id: streamId
      type: System.String
      description: Full stream id, typically in format {category}-{id}
    - id: rev
      type: EventStore.Client.StreamRevision
      description: Expected stream revision
    - id: events
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: Events that are going to be serialized and appended
    - id: metadata
      type: System.Object
      description: Metadata that will be merged with metadata created from conventions
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendEvents(streamId As String, rev As StreamRevision, events As IEnumerable(Of Object), metadata As Object = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendEvents*
  implements:
  - MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  nameWithType.vb: Plumber.AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.Plumber.AppendEvents(String, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
- uid: MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  id: AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvents(string, StreamState, IEnumerable<object>, object?)
  nameWithType: Plumber.AppendEvents(string, StreamState, IEnumerable<object>, object?)
  fullName: MicroPlumberd.Plumber.AppendEvents(string, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable<object>, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvents
    path: src/MicroPlumberd/Plumber.cs
    startLine: 285
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends event to a stream, uses relevant convention to create metadata.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendEvents(string streamId, StreamState state, IEnumerable<object> events, object? metadata = null)
    parameters:
    - id: streamId
      type: System.String
      description: Full stream id, typically in format {category}-{id}
    - id: state
      type: EventStore.Client.StreamState
      description: State of the stream
    - id: events
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: Events that are going to be serialized and appended
    - id: metadata
      type: System.Object
      description: Metadata that will be merged with metadata created from conventions
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendEvents(streamId As String, state As StreamState, events As IEnumerable(Of Object), metadata As Object = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendEvents*
  implements:
  - MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  nameWithType.vb: Plumber.AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.Plumber.AppendEvents(String, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
- uid: MicroPlumberd.Plumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  commentId: M:MicroPlumberd.Plumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  id: AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendSnapshot(object, object, long, StreamState)
  nameWithType: Plumber.AppendSnapshot(object, object, long, StreamState)
  fullName: MicroPlumberd.Plumber.AppendSnapshot(object, object, long, EventStore.Client.StreamState)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendSnapshot
    path: src/MicroPlumberd/Plumber.cs
    startLine: 294
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends the snapshot to a stream determined by the type of the snapshot/state.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendSnapshot(object snapshot, object id, long version, StreamState state)
    parameters:
    - id: snapshot
      type: System.Object
      description: The snapshot.
    - id: id
      type: System.Object
      description: The identifier of the snapshot/state.
    - id: version
      type: System.Int64
      description: The expected version.
    - id: state
      type: EventStore.Client.StreamState
      description: The expected state of the stream.
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendSnapshot(snapshot As Object, id As Object, version As Long, state As StreamState) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendSnapshot*
  implements:
  - MicroPlumberd.IPlumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  nameWithType.vb: Plumber.AppendSnapshot(Object, Object, Long, StreamState)
  fullName.vb: MicroPlumberd.Plumber.AppendSnapshot(Object, Object, Long, EventStore.Client.StreamState)
  name.vb: AppendSnapshot(Object, Object, Long, StreamState)
- uid: MicroPlumberd.Plumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  commentId: M:MicroPlumberd.Plumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  id: AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvent(object, object?, object?, StreamState?, string?)
  nameWithType: Plumber.AppendEvent(object, object?, object?, StreamState?, string?)
  fullName: MicroPlumberd.Plumber.AppendEvent(object, object?, object?, EventStore.Client.StreamState?, string?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvent
    path: src/MicroPlumberd/Plumber.cs
    startLine: 305
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends the event. StreamId is determined using conventions.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendEvent(object evt, object? id = null, object? metadata = null, StreamState? state = null, string? evtName = null)
    parameters:
    - id: evt
      type: System.Object
      description: The evt.
    - id: id
      type: System.Object
      description: The identifier of stream.(second segment of typical streamId, So if streamId is 'foo-123', 123 would be the id.)
    - id: metadata
      type: System.Object
      description: Optional metadata.
    - id: state
      type: System.Nullable{EventStore.Client.StreamState}
      description: Expected state.
    - id: evtName
      type: System.String
      description: Optional name of the event.
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendEvent(evt As Object, id As Object = Nothing, metadata As Object = Nothing, state As StreamState? = Nothing, evtName As String = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendEvent*
  implements:
  - MicroPlumberd.IPlumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  nameWithType.vb: Plumber.AppendEvent(Object, Object, Object, StreamState?, String)
  fullName.vb: MicroPlumberd.Plumber.AppendEvent(Object, Object, Object, EventStore.Client.StreamState?, String)
  name.vb: AppendEvent(Object, Object, Object, StreamState?, String)
- uid: MicroPlumberd.Plumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  commentId: M:MicroPlumberd.Plumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  id: AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvent(string, StreamState, string, object, object?)
  nameWithType: Plumber.AppendEvent(string, StreamState, string, object, object?)
  fullName: MicroPlumberd.Plumber.AppendEvent(string, EventStore.Client.StreamState, string, object, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvent
    path: src/MicroPlumberd/Plumber.cs
    startLine: 320
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends event to a stream, uses relevant convention to create metadata.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendEvent(string streamId, StreamState state, string evtName, object evt, object? metadata = null)
    parameters:
    - id: streamId
      type: System.String
      description: "Full name of streamId for example: 'TicketBooked-b27f9322-7d73-4d98-a605-a731a2c373c6'"
    - id: state
      type: EventStore.Client.StreamState
      description: Expected state of the stream
    - id: evtName
      type: System.String
      description: Name of the event
    - id: evt
      type: System.Object
      description: Event object
    - id: metadata
      type: System.Object
      description: Additional metadata, can be null
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendEvent(streamId As String, state As StreamState, evtName As String, evt As Object, metadata As Object = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendEvent*
  implements:
  - MicroPlumberd.IPlumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  nameWithType.vb: Plumber.AppendEvent(String, StreamState, String, Object, Object)
  fullName.vb: MicroPlumberd.Plumber.AppendEvent(String, EventStore.Client.StreamState, String, Object, Object)
  name.vb: AppendEvent(String, StreamState, String, Object, Object)
- uid: MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  commentId: M:MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  id: SaveChanges``1(``0,System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SaveChanges<T>(T, object?)
  nameWithType: Plumber.SaveChanges<T>(T, object?)
  fullName: MicroPlumberd.Plumber.SaveChanges<T>(T, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SaveChanges
    path: src/MicroPlumberd/Plumber.cs
    startLine: 333
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Saves all pending events from the aggregate. Uses optimistic concurrency.
  example: []
  syntax:
    content: 'public Task<IWriteResult> SaveChanges<T>(T aggregate, object? metadata = null) where T : IAggregate<T>, IId'
    parameters:
    - id: aggregate
      type: '{T}'
      description: The aggregate.
    - id: metadata
      type: System.Object
      description: The optional metadata.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function SaveChanges(Of T As {IAggregate(Of T), IId})(aggregate As T, metadata As Object = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.SaveChanges*
  implements:
  - MicroPlumberd.IPlumber.SaveChanges``1({T},System.Object)
  nameWithType.vb: Plumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.Plumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
- uid: MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  commentId: M:MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  id: SaveNew``1(``0,System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SaveNew<T>(T, object?)
  nameWithType: Plumber.SaveNew<T>(T, object?)
  fullName: MicroPlumberd.Plumber.SaveNew<T>(T, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SaveNew
    path: src/MicroPlumberd/Plumber.cs
    startLine: 351
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Saves the aggregate. Expects that no aggregate exists.
  example: []
  syntax:
    content: 'public Task<IWriteResult> SaveNew<T>(T aggregate, object? metadata = null) where T : IAggregate<T>, IId'
    parameters:
    - id: aggregate
      type: '{T}'
      description: The aggregate.
    - id: metadata
      type: System.Object
      description: The optional metadata.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function SaveNew(Of T As {IAggregate(Of T), IId})(aggregate As T, metadata As Object = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.SaveNew*
  implements:
  - MicroPlumberd.IPlumber.SaveNew``1({T},System.Object)
  nameWithType.vb: Plumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.Plumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
- uid: MicroPlumberd.Plumber.GetSnapshot(System.Object,System.Type)
  commentId: M:MicroPlumberd.Plumber.GetSnapshot(System.Object,System.Type)
  id: GetSnapshot(System.Object,System.Type)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: GetSnapshot(object, Type)
  nameWithType: Plumber.GetSnapshot(object, Type)
  fullName: MicroPlumberd.Plumber.GetSnapshot(object, System.Type)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: GetSnapshot
    path: src/MicroPlumberd/Plumber.cs
    startLine: 368
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Gets the snapshot - deserializes snapshot from the stream. Stream is identified by snaphostType. Deserialization is done from the latest event (snaphost) in the stream.
  example: []
  syntax:
    content: public Task<Snapshot?> GetSnapshot(object id, Type snapshotType)
    parameters:
    - id: id
      type: System.Object
      description: The identifier.
    - id: snapshotType
      type: System.Type
      description: Type of the snapshot.
    return:
      type: System.Threading.Tasks.Task{MicroPlumberd.Snapshot}
      description: The snapshot information containing the snaphost and relevant metadata.
    content.vb: Public Function GetSnapshot(id As Object, snapshotType As Type) As Task(Of Snapshot)
  overload: MicroPlumberd.Plumber.GetSnapshot*
  implements:
  - MicroPlumberd.IPlumber.GetSnapshot(System.Object,System.Type)
  nameWithType.vb: Plumber.GetSnapshot(Object, Type)
  fullName.vb: MicroPlumberd.Plumber.GetSnapshot(Object, System.Type)
  name.vb: GetSnapshot(Object, Type)
- uid: MicroPlumberd.Plumber.GetSnapshot``1(System.Guid)
  commentId: M:MicroPlumberd.Plumber.GetSnapshot``1(System.Guid)
  id: GetSnapshot``1(System.Guid)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: GetSnapshot<T>(Guid)
  nameWithType: Plumber.GetSnapshot<T>(Guid)
  fullName: MicroPlumberd.Plumber.GetSnapshot<T>(System.Guid)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: GetSnapshot
    path: src/MicroPlumberd/Plumber.cs
    startLine: 385
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Gets the snapshot - deserializes snapshot from the stream. Stream is identified by typeof(T). Deserialization is done from the latest event (snaphost) in the stream.
  example: []
  syntax:
    content: public Task<Snapshot<T>?> GetSnapshot<T>(Guid id)
    parameters:
    - id: id
      type: System.Guid
      description: The identifier.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{MicroPlumberd.Snapshot{{T}}}
      description: ''
    content.vb: Public Function GetSnapshot(Of T)(id As Guid) As Task(Of Snapshot(Of T))
  overload: MicroPlumberd.Plumber.GetSnapshot*
  implements:
  - MicroPlumberd.IPlumber.GetSnapshot``1(System.Guid)
  nameWithType.vb: Plumber.GetSnapshot(Of T)(Guid)
  fullName.vb: MicroPlumberd.Plumber.GetSnapshot(Of T)(System.Guid)
  name.vb: GetSnapshot(Of T)(Guid)
- uid: MicroPlumberd.Plumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  commentId: M:MicroPlumberd.Plumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  id: AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendLink(string, Metadata, StreamState?)
  nameWithType: Plumber.AppendLink(string, Metadata, StreamState?)
  fullName: MicroPlumberd.Plumber.AppendLink(string, MicroPlumberd.Metadata, EventStore.Client.StreamState?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendLink
    path: src/MicroPlumberd/Plumber.cs
    startLine: 398
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends a link to the stream based on metadata loaded from somewhere else.
  example: []
  syntax:
    content: public Task<IWriteResult> AppendLink(string streamId, Metadata metadata, StreamState? state = null)
    parameters:
    - id: streamId
      type: System.String
      description: Full name of the stream.
    - id: metadata
      type: MicroPlumberd.Metadata
      description: Event's metadata that link will point to.
    - id: state
      type: System.Nullable{EventStore.Client.StreamState}
      description: StreamState, default is Any
    return:
      type: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
      description: ''
    content.vb: Public Function AppendLink(streamId As String, metadata As Metadata, state As StreamState? = Nothing) As Task(Of IWriteResult)
  overload: MicroPlumberd.Plumber.AppendLink*
  implements:
  - MicroPlumberd.IPlumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  nameWithType.vb: Plumber.AppendLink(String, Metadata, StreamState?)
  fullName.vb: MicroPlumberd.Plumber.AppendLink(String, MicroPlumberd.Metadata, EventStore.Client.StreamState?)
  name.vb: AppendLink(String, Metadata, StreamState?)
- uid: MicroPlumberd.Plumber.GetExtension``1
  commentId: M:MicroPlumberd.Plumber.GetExtension``1
  id: GetExtension``1
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: GetExtension<T>()
  nameWithType: Plumber.GetExtension<T>()
  fullName: MicroPlumberd.Plumber.GetExtension<T>()
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: GetExtension
    path: src/MicroPlumberd/Plumber.cs
    startLine: 416
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public T GetExtension<T>() where T : new()'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetExtension(Of T As New)() As T
  overload: MicroPlumberd.Plumber.GetExtension*
  implements:
  - MicroPlumberd.IExtension.GetExtension``1
  nameWithType.vb: Plumber.GetExtension(Of T)()
  fullName.vb: MicroPlumberd.Plumber.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
- uid: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  commentId: M:MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  id: Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Create(EventStoreClientSettings?, Action<IPlumberConfig>?)
  nameWithType: Plumber.Create(EventStoreClientSettings?, Action<IPlumberConfig>?)
  fullName: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings?, System.Action<MicroPlumberd.IPlumberConfig>?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Create
    path: src/MicroPlumberd/Plumber.cs
    startLine: 432
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Creates instance of IPlumber.
  example: []
  syntax:
    content: public static IPlumber Create(EventStoreClientSettings? settings = null, Action<IPlumberConfig>? configure = null)
    parameters:
    - id: settings
      type: EventStore.Client.EventStoreClientSettings
      description: Connection settings to EventStore
    - id: configure
      type: System.Action{MicroPlumberd.IPlumberConfig}
      description: Additional configuration
    return:
      type: MicroPlumberd.IPlumber
      description: ''
    content.vb: Public Shared Function Create(settings As EventStoreClientSettings = Nothing, configure As Action(Of IPlumberConfig) = Nothing) As IPlumber
  overload: MicroPlumberd.Plumber.Create*
  nameWithType.vb: Plumber.Create(EventStoreClientSettings, Action(Of IPlumberConfig))
  fullName.vb: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings, System.Action(Of MicroPlumberd.IPlumberConfig))
  name.vb: Create(EventStoreClientSettings, Action(Of IPlumberConfig))
references:
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MicroPlumberd.IPlumber
  commentId: T:MicroPlumberd.IPlumber
  parent: MicroPlumberd
  href: MicroPlumberd.IPlumber.html
  name: IPlumber
  nameWithType: IPlumber
  fullName: MicroPlumberd.IPlumber
- uid: MicroPlumberd.IPlumberReadOnlyConfig
  commentId: T:MicroPlumberd.IPlumberReadOnlyConfig
  parent: MicroPlumberd
  href: MicroPlumberd.IPlumberReadOnlyConfig.html
  name: IPlumberReadOnlyConfig
  nameWithType: IPlumberReadOnlyConfig
  fullName: MicroPlumberd.IPlumberReadOnlyConfig
- uid: MicroPlumberd.IExtension
  commentId: T:MicroPlumberd.IExtension
  parent: MicroPlumberd
  href: MicroPlumberd.IExtension.html
  name: IExtension
  nameWithType: IExtension
  fullName: MicroPlumberd.IExtension
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: MicroPlumberd.IPlumber.MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  parent: MicroPlumberd.Services.PlumberExtensions
  definition: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  name: SubscribeCommandHandler<TCommandHandler>(IPlumber, bool?, StreamPosition?)
  nameWithType: PlumberExtensions.SubscribeCommandHandler<TCommandHandler>(IPlumber, bool?, StreamPosition?)
  fullName: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler<TCommandHandler>(MicroPlumberd.IPlumber, bool?, EventStore.Client.StreamPosition?)
  nameWithType.vb: PlumberExtensions.SubscribeCommandHandler(Of TCommandHandler)(IPlumber, Boolean?, StreamPosition?)
  fullName.vb: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler(Of TCommandHandler)(MicroPlumberd.IPlumber, Boolean?, EventStore.Client.StreamPosition?)
  name.vb: SubscribeCommandHandler(Of TCommandHandler)(IPlumber, Boolean?, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
    name: SubscribeCommandHandler
    href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: TCommandHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
    name: SubscribeCommandHandler
    href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: TCommandHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: MicroPlumberd.IPlumberReadOnlyConfig.MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig
  commentId: M:MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  parent: MicroPlumberd.Services.PlumberdConventionsExtensions
  definition: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  name: ServicesConfig(IPlumberReadOnlyConfig)
  nameWithType: PlumberdConventionsExtensions.ServicesConfig(IPlumberReadOnlyConfig)
  fullName: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  spec.csharp:
  - uid: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
    name: ServicesConfig
    href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  - name: (
  - uid: MicroPlumberd.IPlumberReadOnlyConfig
    name: IPlumberReadOnlyConfig
    href: MicroPlumberd.IPlumberReadOnlyConfig.html
  - name: )
  spec.vb:
  - uid: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
    name: ServicesConfig
    href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  - name: (
  - uid: MicroPlumberd.IPlumberReadOnlyConfig
    name: IPlumberReadOnlyConfig
    href: MicroPlumberd.IPlumberReadOnlyConfig.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
  isExternal: true
  href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  name: SubscribeCommandHandler<TCommandHandler>(IPlumber, bool?, StreamPosition?)
  nameWithType: PlumberExtensions.SubscribeCommandHandler<TCommandHandler>(IPlumber, bool?, StreamPosition?)
  fullName: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler<TCommandHandler>(MicroPlumberd.IPlumber, bool?, EventStore.Client.StreamPosition?)
  nameWithType.vb: PlumberExtensions.SubscribeCommandHandler(Of TCommandHandler)(IPlumber, Boolean?, StreamPosition?)
  fullName.vb: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler(Of TCommandHandler)(MicroPlumberd.IPlumber, Boolean?, EventStore.Client.StreamPosition?)
  name.vb: SubscribeCommandHandler(Of TCommandHandler)(IPlumber, Boolean?, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
    name: SubscribeCommandHandler
    href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: TCommandHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.Services.PlumberExtensions.SubscribeCommandHandler``1(MicroPlumberd.IPlumber,System.Nullable{System.Boolean},System.Nullable{EventStore.Client.StreamPosition})
    name: SubscribeCommandHandler
    href: MicroPlumberd.Services.PlumberExtensions.html#MicroPlumberd_Services_PlumberExtensions_SubscribeCommandHandler__1_MicroPlumberd_IPlumber_System_Nullable_System_Boolean__System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: TCommandHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.IPlumber
    name: IPlumber
    href: MicroPlumberd.IPlumber.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: MicroPlumberd.Services.PlumberExtensions
  commentId: T:MicroPlumberd.Services.PlumberExtensions
  parent: MicroPlumberd.Services
  href: MicroPlumberd.Services.PlumberExtensions.html
  name: PlumberExtensions
  nameWithType: PlumberExtensions
  fullName: MicroPlumberd.Services.PlumberExtensions
- uid: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  commentId: M:MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  name: ServicesConfig(IPlumberReadOnlyConfig)
  nameWithType: PlumberdConventionsExtensions.ServicesConfig(IPlumberReadOnlyConfig)
  fullName: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
  spec.csharp:
  - uid: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
    name: ServicesConfig
    href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  - name: (
  - uid: MicroPlumberd.IPlumberReadOnlyConfig
    name: IPlumberReadOnlyConfig
    href: MicroPlumberd.IPlumberReadOnlyConfig.html
  - name: )
  spec.vb:
  - uid: MicroPlumberd.Services.PlumberdConventionsExtensions.ServicesConfig(MicroPlumberd.IPlumberReadOnlyConfig)
    name: ServicesConfig
    href: MicroPlumberd.Services.PlumberdConventionsExtensions.html#MicroPlumberd_Services_PlumberdConventionsExtensions_ServicesConfig_MicroPlumberd_IPlumberReadOnlyConfig_
  - name: (
  - uid: MicroPlumberd.IPlumberReadOnlyConfig
    name: IPlumberReadOnlyConfig
    href: MicroPlumberd.IPlumberReadOnlyConfig.html
  - name: )
- uid: MicroPlumberd.Services.PlumberdConventionsExtensions
  commentId: T:MicroPlumberd.Services.PlumberdConventionsExtensions
  parent: MicroPlumberd.Services
  href: MicroPlumberd.Services.PlumberdConventionsExtensions.html
  name: PlumberdConventionsExtensions
  nameWithType: PlumberdConventionsExtensions
  fullName: MicroPlumberd.Services.PlumberdConventionsExtensions
- uid: MicroPlumberd.Services
  commentId: N:MicroPlumberd.Services
  href: MicroPlumberd.html
  name: MicroPlumberd.Services
  nameWithType: MicroPlumberd.Services
  fullName: MicroPlumberd.Services
  spec.csharp:
  - uid: MicroPlumberd
    name: MicroPlumberd
    href: MicroPlumberd.html
  - name: .
  - uid: MicroPlumberd.Services
    name: Services
    href: MicroPlumberd.Services.html
  spec.vb:
  - uid: MicroPlumberd
    name: MicroPlumberd
    href: MicroPlumberd.html
  - name: .
  - uid: MicroPlumberd.Services
    name: Services
    href: MicroPlumberd.Services.html
- uid: MicroPlumberd.Plumber.Config*
  commentId: Overload:MicroPlumberd.Plumber.Config
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Config
  name: Config
  nameWithType: Plumber.Config
  fullName: MicroPlumberd.Plumber.Config
- uid: MicroPlumberd.IPlumber.Config
  commentId: P:MicroPlumberd.IPlumber.Config
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Config
  name: Config
  nameWithType: IPlumber.Config
  fullName: MicroPlumberd.IPlumber.Config
- uid: MicroPlumberd.Plumber.TypeHandlerRegisters*
  commentId: Overload:MicroPlumberd.Plumber.TypeHandlerRegisters
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_TypeHandlerRegisters
  name: TypeHandlerRegisters
  nameWithType: Plumber.TypeHandlerRegisters
  fullName: MicroPlumberd.Plumber.TypeHandlerRegisters
- uid: MicroPlumberd.IPlumber.TypeHandlerRegisters
  commentId: P:MicroPlumberd.IPlumber.TypeHandlerRegisters
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_TypeHandlerRegisters
  name: TypeHandlerRegisters
  nameWithType: IPlumber.TypeHandlerRegisters
  fullName: MicroPlumberd.IPlumber.TypeHandlerRegisters
- uid: MicroPlumberd.ITypeHandlerRegisters
  commentId: T:MicroPlumberd.ITypeHandlerRegisters
  parent: MicroPlumberd
  href: MicroPlumberd.ITypeHandlerRegisters.html
  name: ITypeHandlerRegisters
  nameWithType: ITypeHandlerRegisters
  fullName: MicroPlumberd.ITypeHandlerRegisters
- uid: MicroPlumberd.Plumber.Client*
  commentId: Overload:MicroPlumberd.Plumber.Client
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Client
  name: Client
  nameWithType: Plumber.Client
  fullName: MicroPlumberd.Plumber.Client
- uid: MicroPlumberd.IPlumber.Client
  commentId: P:MicroPlumberd.IPlumber.Client
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Client
  name: Client
  nameWithType: IPlumber.Client
  fullName: MicroPlumberd.IPlumber.Client
- uid: EventStore.Client.EventStoreClient
  commentId: T:EventStore.Client.EventStoreClient
  parent: EventStore.Client
  isExternal: true
  name: EventStoreClient
  nameWithType: EventStoreClient
  fullName: EventStore.Client.EventStoreClient
- uid: EventStore.Client
  commentId: N:EventStore.Client
  isExternal: true
  name: EventStore.Client
  nameWithType: EventStore.Client
  fullName: EventStore.Client
  spec.csharp:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
  spec.vb:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
- uid: MicroPlumberd.Plumber.ProjectionRegister*
  commentId: Overload:MicroPlumberd.Plumber.ProjectionRegister
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ProjectionRegister
  name: ProjectionRegister
  nameWithType: Plumber.ProjectionRegister
  fullName: MicroPlumberd.Plumber.ProjectionRegister
- uid: MicroPlumberd.IPlumber.ProjectionRegister
  commentId: P:MicroPlumberd.IPlumber.ProjectionRegister
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_ProjectionRegister
  name: ProjectionRegister
  nameWithType: IPlumber.ProjectionRegister
  fullName: MicroPlumberd.IPlumber.ProjectionRegister
- uid: MicroPlumberd.IProjectionRegister
  commentId: T:MicroPlumberd.IProjectionRegister
  parent: MicroPlumberd
  href: MicroPlumberd.IProjectionRegister.html
  name: IProjectionRegister
  nameWithType: IProjectionRegister
  fullName: MicroPlumberd.IProjectionRegister
- uid: MicroPlumberd.Plumber.PersistentSubscriptionClient*
  commentId: Overload:MicroPlumberd.Plumber.PersistentSubscriptionClient
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_PersistentSubscriptionClient
  name: PersistentSubscriptionClient
  nameWithType: Plumber.PersistentSubscriptionClient
  fullName: MicroPlumberd.Plumber.PersistentSubscriptionClient
- uid: MicroPlumberd.IPlumber.PersistentSubscriptionClient
  commentId: P:MicroPlumberd.IPlumber.PersistentSubscriptionClient
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_PersistentSubscriptionClient
  name: PersistentSubscriptionClient
  nameWithType: IPlumber.PersistentSubscriptionClient
  fullName: MicroPlumberd.IPlumber.PersistentSubscriptionClient
- uid: EventStore.Client.EventStorePersistentSubscriptionsClient
  commentId: T:EventStore.Client.EventStorePersistentSubscriptionsClient
  parent: EventStore.Client
  isExternal: true
  name: EventStorePersistentSubscriptionsClient
  nameWithType: EventStorePersistentSubscriptionsClient
  fullName: EventStore.Client.EventStorePersistentSubscriptionsClient
- uid: MicroPlumberd.Plumber.ProjectionManagementClient*
  commentId: Overload:MicroPlumberd.Plumber.ProjectionManagementClient
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ProjectionManagementClient
  name: ProjectionManagementClient
  nameWithType: Plumber.ProjectionManagementClient
  fullName: MicroPlumberd.Plumber.ProjectionManagementClient
- uid: MicroPlumberd.IPlumber.ProjectionManagementClient
  commentId: P:MicroPlumberd.IPlumber.ProjectionManagementClient
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_ProjectionManagementClient
  name: ProjectionManagementClient
  nameWithType: IPlumber.ProjectionManagementClient
  fullName: MicroPlumberd.IPlumber.ProjectionManagementClient
- uid: EventStore.Client.EventStoreProjectionManagementClient
  commentId: T:EventStore.Client.EventStoreProjectionManagementClient
  parent: EventStore.Client
  isExternal: true
  name: EventStoreProjectionManagementClient
  nameWithType: EventStoreProjectionManagementClient
  fullName: EventStore.Client.EventStoreProjectionManagementClient
- uid: MicroPlumberd.Plumber.ServiceProvider*
  commentId: Overload:MicroPlumberd.Plumber.ServiceProvider
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ServiceProvider
  name: ServiceProvider
  nameWithType: Plumber.ServiceProvider
  fullName: MicroPlumberd.Plumber.ServiceProvider
- uid: MicroPlumberd.IPlumberReadOnlyConfig.ServiceProvider
  commentId: P:MicroPlumberd.IPlumberReadOnlyConfig.ServiceProvider
  parent: MicroPlumberd.IPlumberReadOnlyConfig
  href: MicroPlumberd.IPlumberReadOnlyConfig.html#MicroPlumberd_IPlumberReadOnlyConfig_ServiceProvider
  name: ServiceProvider
  nameWithType: IPlumberReadOnlyConfig.ServiceProvider
  fullName: MicroPlumberd.IPlumberReadOnlyConfig.ServiceProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: MicroPlumberd.Plumber.SerializerFactory*
  commentId: Overload:MicroPlumberd.Plumber.SerializerFactory
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SerializerFactory
  name: SerializerFactory
  nameWithType: Plumber.SerializerFactory
  fullName: MicroPlumberd.Plumber.SerializerFactory
- uid: MicroPlumberd.IPlumberReadOnlyConfig.SerializerFactory
  commentId: P:MicroPlumberd.IPlumberReadOnlyConfig.SerializerFactory
  parent: MicroPlumberd.IPlumberReadOnlyConfig
  href: MicroPlumberd.IPlumberReadOnlyConfig.html#MicroPlumberd_IPlumberReadOnlyConfig_SerializerFactory
  name: SerializerFactory
  nameWithType: IPlumberReadOnlyConfig.SerializerFactory
  fullName: MicroPlumberd.IPlumberReadOnlyConfig.SerializerFactory
- uid: System.Func{System.Type,MicroPlumberd.IObjectSerializer}
  commentId: T:System.Func{System.Type,MicroPlumberd.IObjectSerializer}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Type, IObjectSerializer>
  nameWithType: Func<Type, IObjectSerializer>
  fullName: System.Func<System.Type, MicroPlumberd.IObjectSerializer>
  nameWithType.vb: Func(Of Type, IObjectSerializer)
  fullName.vb: System.Func(Of System.Type, MicroPlumberd.IObjectSerializer)
  name.vb: Func(Of Type, IObjectSerializer)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IObjectSerializer
    name: IObjectSerializer
    href: MicroPlumberd.IObjectSerializer.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: MicroPlumberd.IObjectSerializer
    name: IObjectSerializer
    href: MicroPlumberd.IObjectSerializer.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MicroPlumberd.Plumber.Conventions*
  commentId: Overload:MicroPlumberd.Plumber.Conventions
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Conventions
  name: Conventions
  nameWithType: Plumber.Conventions
  fullName: MicroPlumberd.Plumber.Conventions
- uid: MicroPlumberd.IPlumberReadOnlyConfig.Conventions
  commentId: P:MicroPlumberd.IPlumberReadOnlyConfig.Conventions
  parent: MicroPlumberd.IPlumberReadOnlyConfig
  href: MicroPlumberd.IPlumberReadOnlyConfig.html#MicroPlumberd_IPlumberReadOnlyConfig_Conventions
  name: Conventions
  nameWithType: IPlumberReadOnlyConfig.Conventions
  fullName: MicroPlumberd.IPlumberReadOnlyConfig.Conventions
- uid: MicroPlumberd.IReadOnlyConventions
  commentId: T:MicroPlumberd.IReadOnlyConventions
  parent: MicroPlumberd
  href: MicroPlumberd.IReadOnlyConventions.html
  name: IReadOnlyConventions
  nameWithType: IReadOnlyConventions
  fullName: MicroPlumberd.IReadOnlyConventions
- uid: MicroPlumberd.Plumber.Subscribe*
  commentId: Overload:MicroPlumberd.Plumber.Subscribe
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: Subscribe
  nameWithType: Plumber.Subscribe
  fullName: MicroPlumberd.Plumber.Subscribe
- uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: Subscribe(string, FromStream, UserCredentials, CancellationToken)
  nameWithType: IPlumber.Subscribe(string, FromStream, UserCredentials, CancellationToken)
  fullName: MicroPlumberd.IPlumber.Subscribe(string, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  nameWithType.vb: IPlumber.Subscribe(String, FromStream, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.IPlumber.Subscribe(String, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: Subscribe(String, FromStream, UserCredentials, CancellationToken)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: Subscribe
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: Subscribe
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: EventStore.Client.FromStream
  commentId: T:EventStore.Client.FromStream
  parent: EventStore.Client
  isExternal: true
  name: FromStream
  nameWithType: FromStream
  fullName: EventStore.Client.FromStream
- uid: EventStore.Client.UserCredentials
  commentId: T:EventStore.Client.UserCredentials
  parent: EventStore.Client
  isExternal: true
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: EventStore.Client.UserCredentials
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: MicroPlumberd.ISubscriptionRunner
  commentId: T:MicroPlumberd.ISubscriptionRunner
  parent: MicroPlumberd
  href: MicroPlumberd.ISubscriptionRunner.html
  name: ISubscriptionRunner
  nameWithType: ISubscriptionRunner
  fullName: MicroPlumberd.ISubscriptionRunner
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: MicroPlumberd.Plumber.SubscribeEventHandler*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeEventHandler
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  name: SubscribeEventHandler
  nameWithType: Plumber.SubscribeEventHandler
  fullName: MicroPlumberd.Plumber.SubscribeEventHandler
- uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1({TEventHandler},System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  name: SubscribeEventHandler<TEventHandler>(TEventHandler, string, FromStream?, bool)
  nameWithType: IPlumber.SubscribeEventHandler<TEventHandler>(TEventHandler, string, FromStream?, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandler<TEventHandler>(TEventHandler, string, EventStore.Client.FromStream?, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: '{TEventHandler}'
  commentId: '!:TEventHandler'
  definition: TEventHandler
  name: TEventHandler
  nameWithType: TEventHandler
  fullName: TEventHandler
- uid: System.Nullable{EventStore.Client.FromStream}
  commentId: T:System.Nullable{EventStore.Client.FromStream}
  parent: System
  definition: System.Nullable`1
  name: FromStream?
  nameWithType: FromStream?
  fullName: EventStore.Client.FromStream?
  spec.csharp:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{System.IAsyncDisposable}
  commentId: T:System.Threading.Tasks.Task{System.IAsyncDisposable}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IAsyncDisposable>
  nameWithType: Task<IAsyncDisposable>
  fullName: System.Threading.Tasks.Task<System.IAsyncDisposable>
  nameWithType.vb: Task(Of IAsyncDisposable)
  fullName.vb: System.Threading.Tasks.Task(Of System.IAsyncDisposable)
  name.vb: Task(Of IAsyncDisposable)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IAsyncDisposable
    name: IAsyncDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IAsyncDisposable
    name: IAsyncDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  name: SubscribeEventHandler<TEventHandler>(TEventHandler, string, FromStream?, bool)
  nameWithType: IPlumber.SubscribeEventHandler<TEventHandler>(TEventHandler, string, FromStream?, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandler<TEventHandler>(TEventHandler, string, EventStore.Client.FromStream?, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TEventHandler, String, FromStream?, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1___0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TEventHandler
  name: TEventHandler
  nameWithType: TEventHandler
  fullName: TEventHandler
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},{TEventHandler},System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  name: SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, FromStream?, bool)
  nameWithType: IPlumber.SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, FromStream?, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandler<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>, TEventHandler, string, EventStore.Client.FromStream?, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandler(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MicroPlumberd.TypeEventConverter
  commentId: T:MicroPlumberd.TypeEventConverter
  parent: MicroPlumberd
  href: MicroPlumberd.TypeEventConverter.html
  name: TypeEventConverter
  nameWithType: TypeEventConverter
  fullName: MicroPlumberd.TypeEventConverter
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  name: SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, FromStream?, bool)
  nameWithType: IPlumber.SubscribeEventHandler<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, FromStream?, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandler<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>, TEventHandler, string, EventStore.Client.FromStream?, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandler(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, EventStore.Client.FromStream?, Boolean)
  name.vb: SubscribeEventHandler(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, FromStream?, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandler``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.Nullable{EventStore.Client.FromStream},System.Boolean)
    name: SubscribeEventHandler
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandler__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_Nullable_EventStore_Client_FromStream__System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeEventHandlerPersistently
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  name: SubscribeEventHandlerPersistently
  nameWithType: Plumber.SubscribeEventHandlerPersistently
  fullName: MicroPlumberd.Plumber.SubscribeEventHandlerPersistently
- uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},{TEventHandler},System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  name: SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, string, IPosition, bool)
  nameWithType: IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, string, IPosition, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>, TEventHandler, string, string, EventStore.Client.IPosition, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EventStore.Client.IPosition
  commentId: T:EventStore.Client.IPosition
  parent: EventStore.Client
  isExternal: true
  name: IPosition
  nameWithType: IPosition
  fullName: EventStore.Client.IPosition
- uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  name: SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, string, IPosition, bool)
  nameWithType: IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TypeEventConverter, IEnumerable<string>, TEventHandler, string, string, IPosition, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable<string>, TEventHandler, string, string, EventStore.Client.IPosition, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(MicroPlumberd.TypeEventConverter, System.Collections.Generic.IEnumerable(Of String), TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TypeEventConverter, IEnumerable(Of String), TEventHandler, String, String, IPosition, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(MicroPlumberd.TypeEventConverter,System.Collections.Generic.IEnumerable{System.String},``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1_MicroPlumberd_TypeEventConverter_System_Collections_Generic_IEnumerable_System_String____0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1({TEventHandler},System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  name: SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, IPosition, bool)
  nameWithType: IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, IPosition, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, EventStore.Client.IPosition, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  commentId: M:MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  name: SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, IPosition, bool)
  nameWithType: IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, IPosition, bool)
  fullName: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently<TEventHandler>(TEventHandler, string, string, EventStore.Client.IPosition, bool)
  nameWithType.vb: IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, EventStore.Client.IPosition, Boolean)
  name.vb: SubscribeEventHandlerPersistently(Of TEventHandler)(TEventHandler, String, String, IPosition, Boolean)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: <
  - name: TEventHandler
  - name: '>'
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeEventHandlerPersistently``1(``0,System.String,System.String,EventStore.Client.IPosition,System.Boolean)
    name: SubscribeEventHandlerPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeEventHandlerPersistently__1___0_System_String_System_String_EventStore_Client_IPosition_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TEventHandler
  - name: )
  - name: (
  - name: TEventHandler
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.IPosition
    name: IPosition
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MicroPlumberd.Plumber.SubscribePersistently*
  commentId: Overload:MicroPlumberd.Plumber.SubscribePersistently
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: SubscribePersistently
  nameWithType: Plumber.SubscribePersistently
  fullName: MicroPlumberd.Plumber.SubscribePersistently
- uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: SubscribePersistently(string, string, int, UserCredentials, CancellationToken)
  nameWithType: IPlumber.SubscribePersistently(string, string, int, UserCredentials, CancellationToken)
  fullName: MicroPlumberd.IPlumber.SubscribePersistently(string, string, int, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  nameWithType.vb: IPlumber.SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.IPlumber.SubscribePersistently(String, String, Integer, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: SubscribePersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: SubscribePersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MicroPlumberd.Plumber.Rehydrate*
  commentId: Overload:MicroPlumberd.Plumber.Rehydrate
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  name: Rehydrate
  nameWithType: Plumber.Rehydrate
  fullName: MicroPlumberd.Plumber.Rehydrate
- uid: MicroPlumberd.IPlumber.Rehydrate``1({T},System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  name: Rehydrate<T>(T, Guid, StreamPosition?)
  nameWithType: IPlumber.Rehydrate<T>(T, Guid, StreamPosition?)
  fullName: MicroPlumberd.IPlumber.Rehydrate<T>(T, System.Guid, EventStore.Client.StreamPosition?)
  nameWithType.vb: IPlumber.Rehydrate(Of T)(T, Guid, StreamPosition?)
  fullName.vb: MicroPlumberd.IPlumber.Rehydrate(Of T)(T, System.Guid, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, Guid, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{EventStore.Client.StreamPosition}
  commentId: T:System.Nullable{EventStore.Client.StreamPosition}
  parent: System
  definition: System.Nullable`1
  name: StreamPosition?
  nameWithType: StreamPosition?
  fullName: EventStore.Client.StreamPosition?
  spec.csharp:
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  name: Rehydrate<T>(T, Guid, StreamPosition?)
  nameWithType: IPlumber.Rehydrate<T>(T, Guid, StreamPosition?)
  fullName: MicroPlumberd.IPlumber.Rehydrate<T>(T, System.Guid, EventStore.Client.StreamPosition?)
  nameWithType.vb: IPlumber.Rehydrate(Of T)(T, Guid, StreamPosition?)
  fullName.vb: MicroPlumberd.IPlumber.Rehydrate(Of T)(T, System.Guid, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, Guid, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.Guid,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_Guid_System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MicroPlumberd.IPlumber.Rehydrate``1({T},System.String,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  name: Rehydrate<T>(T, string, StreamPosition?)
  nameWithType: IPlumber.Rehydrate<T>(T, string, StreamPosition?)
  fullName: MicroPlumberd.IPlumber.Rehydrate<T>(T, string, EventStore.Client.StreamPosition?)
  nameWithType.vb: IPlumber.Rehydrate(Of T)(T, String, StreamPosition?)
  fullName.vb: MicroPlumberd.IPlumber.Rehydrate(Of T)(T, String, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, String, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  commentId: M:MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  name: Rehydrate<T>(T, string, StreamPosition?)
  nameWithType: IPlumber.Rehydrate<T>(T, string, StreamPosition?)
  fullName: MicroPlumberd.IPlumber.Rehydrate<T>(T, string, EventStore.Client.StreamPosition?)
  nameWithType.vb: IPlumber.Rehydrate(Of T)(T, String, StreamPosition?)
  fullName.vb: MicroPlumberd.IPlumber.Rehydrate(Of T)(T, String, EventStore.Client.StreamPosition?)
  name.vb: Rehydrate(Of T)(T, String, StreamPosition?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Rehydrate``1(``0,System.String,System.Nullable{EventStore.Client.StreamPosition})
    name: Rehydrate
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Rehydrate__1___0_System_String_System_Nullable_EventStore_Client_StreamPosition__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: )
- uid: MicroPlumberd.Plumber.FindEventInStream*
  commentId: Overload:MicroPlumberd.Plumber.FindEventInStream
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_FindEventInStream_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  name: FindEventInStream
  nameWithType: Plumber.FindEventInStream
  fullName: MicroPlumberd.Plumber.FindEventInStream
- uid: MicroPlumberd.IPlumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  commentId: M:MicroPlumberd.IPlumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  name: FindEventInStream(string, Guid, TypeEventConverter, Direction)
  nameWithType: IPlumber.FindEventInStream(string, Guid, TypeEventConverter, Direction)
  fullName: MicroPlumberd.IPlumber.FindEventInStream(string, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  nameWithType.vb: IPlumber.FindEventInStream(String, Guid, TypeEventConverter, Direction)
  fullName.vb: MicroPlumberd.IPlumber.FindEventInStream(String, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  name.vb: FindEventInStream(String, Guid, TypeEventConverter, Direction)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
    name: FindEventInStream
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.FindEventInStream(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
    name: FindEventInStream
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: )
- uid: EventStore.Client.Direction
  commentId: T:EventStore.Client.Direction
  parent: EventStore.Client
  isExternal: true
  name: Direction
  nameWithType: Direction
  fullName: EventStore.Client.Direction
- uid: System.Threading.Tasks.Task{MicroPlumberd.IEventRecord}
  commentId: T:System.Threading.Tasks.Task{MicroPlumberd.IEventRecord}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEventRecord>
  nameWithType: Task<IEventRecord>
  fullName: System.Threading.Tasks.Task<MicroPlumberd.IEventRecord>
  nameWithType.vb: Task(Of IEventRecord)
  fullName.vb: System.Threading.Tasks.Task(Of MicroPlumberd.IEventRecord)
  name.vb: Task(Of IEventRecord)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MicroPlumberd.IEventRecord
    name: IEventRecord
    href: MicroPlumberd.IEventRecord.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.IEventRecord
    name: IEventRecord
    href: MicroPlumberd.IEventRecord.html
  - name: )
- uid: MicroPlumberd.IPlumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  commentId: M:MicroPlumberd.IPlumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream__1_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  name: FindEventInStream<TEvent>(string, Guid, TypeEventConverter, Direction)
  nameWithType: IPlumber.FindEventInStream<TEvent>(string, Guid, TypeEventConverter, Direction)
  fullName: MicroPlumberd.IPlumber.FindEventInStream<TEvent>(string, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  nameWithType.vb: IPlumber.FindEventInStream(Of TEvent)(String, Guid, TypeEventConverter, Direction)
  fullName.vb: MicroPlumberd.IPlumber.FindEventInStream(Of TEvent)(String, System.Guid, MicroPlumberd.TypeEventConverter, EventStore.Client.Direction)
  name.vb: FindEventInStream(Of TEvent)(String, Guid, TypeEventConverter, Direction)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
    name: FindEventInStream
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream__1_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.FindEventInStream``1(System.String,System.Guid,MicroPlumberd.TypeEventConverter,EventStore.Client.Direction)
    name: FindEventInStream
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_FindEventInStream__1_System_String_System_Guid_MicroPlumberd_TypeEventConverter_EventStore_Client_Direction_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task{MicroPlumberd.IEventRecord{{TEvent}}}
  commentId: T:System.Threading.Tasks.Task{MicroPlumberd.IEventRecord{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEventRecord<TEvent>>
  nameWithType: Task<IEventRecord<TEvent>>
  fullName: System.Threading.Tasks.Task<MicroPlumberd.IEventRecord<TEvent>>
  nameWithType.vb: Task(Of IEventRecord(Of TEvent))
  fullName.vb: System.Threading.Tasks.Task(Of MicroPlumberd.IEventRecord(Of TEvent))
  name.vb: Task(Of IEventRecord(Of TEvent))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MicroPlumberd.IEventRecord`1
    name: IEventRecord
    href: MicroPlumberd.IEventRecord-1.html
  - name: <
  - name: TEvent
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.IEventRecord`1
    name: IEventRecord
    href: MicroPlumberd.IEventRecord-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: )
- uid: MicroPlumberd.Plumber.SubscribeSet*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeSet
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeSet
  name: SubscribeSet
  nameWithType: Plumber.SubscribeSet
  fullName: MicroPlumberd.Plumber.SubscribeSet
- uid: MicroPlumberd.IPlumber.SubscribeSet
  commentId: M:MicroPlumberd.IPlumber.SubscribeSet
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  name: SubscribeSet()
  nameWithType: IPlumber.SubscribeSet()
  fullName: MicroPlumberd.IPlumber.SubscribeSet()
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeSet
    name: SubscribeSet
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  - name: (
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeSet
    name: SubscribeSet
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  - name: (
  - name: )
- uid: MicroPlumberd.ISubscriptionSet
  commentId: T:MicroPlumberd.ISubscriptionSet
  parent: MicroPlumberd
  href: MicroPlumberd.ISubscriptionSet.html
  name: ISubscriptionSet
  nameWithType: ISubscriptionSet
  fullName: MicroPlumberd.ISubscriptionSet
- uid: MicroPlumberd.Plumber.Read*
  commentId: Overload:MicroPlumberd.Plumber.Read
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Read__1_System_Object_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: Read
  nameWithType: Plumber.Read
  fullName: MicroPlumberd.Plumber.Read
- uid: MicroPlumberd.IPlumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.IPlumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Object_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: Read<TOwner>(object, StreamPosition?, Direction?, long)
  nameWithType: IPlumber.Read<TOwner>(object, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.IPlumber.Read<TOwner>(object, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  nameWithType.vb: IPlumber.Read(Of TOwner)(Object, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.IPlumber.Read(Of TOwner)(Object, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(Of TOwner)(Object, StreamPosition?, Direction?, Long)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Object_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: <
  - name: TOwner
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Read``1(System.Object,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Object_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - name: Of
  - name: " "
  - name: TOwner
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Nullable{EventStore.Client.Direction}
  commentId: T:System.Nullable{EventStore.Client.Direction}
  parent: System
  definition: System.Nullable`1
  name: Direction?
  nameWithType: Direction?
  fullName: EventStore.Client.Direction?
  spec.csharp:
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Collections.Generic.IAsyncEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<object>
  nameWithType: IAsyncEnumerable<object>
  fullName: System.Collections.Generic.IAsyncEnumerable<object>
  nameWithType.vb: IAsyncEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Object)
  name.vb: IAsyncEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MicroPlumberd.IPlumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.IPlumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: Read<TOwner>(StreamPosition?, Direction?, long)
  nameWithType: IPlumber.Read<TOwner>(StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.IPlumber.Read<TOwner>(EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  nameWithType.vb: IPlumber.Read(Of TOwner)(StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.IPlumber.Read(Of TOwner)(EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(Of TOwner)(StreamPosition?, Direction?, Long)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: <
  - name: TOwner
  - name: '>'
  - name: (
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Read``1(System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read__1_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - name: Of
  - name: " "
  - name: TOwner
  - name: )
  - name: (
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: MicroPlumberd.Plumber.ReadFull*
  commentId: Overload:MicroPlumberd.Plumber.ReadFull
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ReadFull_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: ReadFull
  nameWithType: Plumber.ReadFull
  fullName: MicroPlumberd.Plumber.ReadFull
- uid: MicroPlumberd.IPlumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.IPlumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_ReadFull_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: ReadFull(string, TypeEventConverter, StreamPosition?, Direction?, long)
  nameWithType: IPlumber.ReadFull(string, TypeEventConverter, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.IPlumber.ReadFull(string, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  nameWithType.vb: IPlumber.ReadFull(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.IPlumber.ReadFull(String, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: ReadFull(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: ReadFull
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_ReadFull_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.ReadFull(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: ReadFull
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_ReadFull_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable{System.ValueTuple{System.Object,MicroPlumberd.Metadata}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.ValueTuple{System.Object,MicroPlumberd.Metadata}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<(object, Metadata)>
  nameWithType: IAsyncEnumerable<(object, Metadata)>
  fullName: System.Collections.Generic.IAsyncEnumerable<(object, MicroPlumberd.Metadata)>
  nameWithType.vb: IAsyncEnumerable(Of (Object, Metadata))
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of (Object, MicroPlumberd.Metadata))
  name.vb: IAsyncEnumerable(Of (Object, Metadata))
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: MicroPlumberd.Metadata
    name: Metadata
    href: MicroPlumberd.Metadata.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: MicroPlumberd.Metadata
    name: Metadata
    href: MicroPlumberd.Metadata.html
  - name: )
  - name: )
- uid: MicroPlumberd.IPlumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  commentId: M:MicroPlumberd.IPlumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  name: Read(string, TypeEventConverter, StreamPosition?, Direction?, long)
  nameWithType: IPlumber.Read(string, TypeEventConverter, StreamPosition?, Direction?, long)
  fullName: MicroPlumberd.IPlumber.Read(string, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, long)
  nameWithType.vb: IPlumber.Read(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  fullName.vb: MicroPlumberd.IPlumber.Read(String, MicroPlumberd.TypeEventConverter, EventStore.Client.StreamPosition?, EventStore.Client.Direction?, Long)
  name.vb: Read(String, TypeEventConverter, StreamPosition?, Direction?, Long)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Read(System.String,MicroPlumberd.TypeEventConverter,System.Nullable{EventStore.Client.StreamPosition},System.Nullable{EventStore.Client.Direction},System.Int64)
    name: Read
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Read_System_String_MicroPlumberd_TypeEventConverter_System_Nullable_EventStore_Client_StreamPosition__System_Nullable_EventStore_Client_Direction__System_Int64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.TypeEventConverter
    name: TypeEventConverter
    href: MicroPlumberd.TypeEventConverter.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamPosition
    name: StreamPosition
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: EventStore.Client.Direction
    name: Direction
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: MicroPlumberd.Plumber.Get*
  commentId: Overload:MicroPlumberd.Plumber.Get
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Get__1_System_Object_
  name: Get
  nameWithType: Plumber.Get
  fullName: MicroPlumberd.Plumber.Get
- uid: MicroPlumberd.IPlumber.Get``1(System.Object)
  commentId: M:MicroPlumberd.IPlumber.Get``1(System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Object_
  name: Get<TOwner>(object)
  nameWithType: IPlumber.Get<TOwner>(object)
  fullName: MicroPlumberd.IPlumber.Get<TOwner>(object)
  nameWithType.vb: IPlumber.Get(Of TOwner)(Object)
  fullName.vb: MicroPlumberd.IPlumber.Get(Of TOwner)(Object)
  name.vb: Get(Of TOwner)(Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Get``1(System.Object)
    name: Get
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Object_
  - name: <
  - name: TOwner
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Get``1(System.Object)
    name: Get
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TOwner
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Threading.Tasks.Task{{TOwner}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TOwner>
  nameWithType: Task<TOwner>
  fullName: System.Threading.Tasks.Task<TOwner>
  nameWithType.vb: Task(Of TOwner)
  fullName.vb: System.Threading.Tasks.Task(Of TOwner)
  name.vb: Task(Of TOwner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TOwner
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TOwner
  - name: )
- uid: MicroPlumberd.Plumber.AppendEvents*
  commentId: Overload:MicroPlumberd.Plumber.AppendEvents
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents
  nameWithType: Plumber.AppendEvents
  fullName: MicroPlumberd.Plumber.AppendEvents
- uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents(string, StreamRevision, IEnumerable<object>, object)
  nameWithType: IPlumber.AppendEvents(string, StreamRevision, IEnumerable<object>, object)
  fullName: MicroPlumberd.IPlumber.AppendEvents(string, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable<object>, object)
  nameWithType.vb: IPlumber.AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvents(String, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamRevision
    name: StreamRevision
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamRevision
    name: StreamRevision
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: EventStore.Client.StreamRevision
  commentId: T:EventStore.Client.StreamRevision
  parent: EventStore.Client
  isExternal: true
  name: StreamRevision
  nameWithType: StreamRevision
  fullName: EventStore.Client.StreamRevision
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
  commentId: T:System.Threading.Tasks.Task{EventStore.Client.IWriteResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IWriteResult>
  nameWithType: Task<IWriteResult>
  fullName: System.Threading.Tasks.Task<EventStore.Client.IWriteResult>
  nameWithType.vb: Task(Of IWriteResult)
  fullName.vb: System.Threading.Tasks.Task(Of EventStore.Client.IWriteResult)
  name.vb: Task(Of IWriteResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EventStore.Client.IWriteResult
    name: IWriteResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EventStore.Client.IWriteResult
    name: IWriteResult
    isExternal: true
  - name: )
- uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents(string, StreamState, IEnumerable<object>, object)
  nameWithType: IPlumber.AppendEvents(string, StreamState, IEnumerable<object>, object)
  fullName: MicroPlumberd.IPlumber.AppendEvents(string, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable<object>, object)
  nameWithType.vb: IPlumber.AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvents(String, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: EventStore.Client.StreamState
  commentId: T:EventStore.Client.StreamState
  parent: EventStore.Client
  isExternal: true
  name: StreamState
  nameWithType: StreamState
  fullName: EventStore.Client.StreamState
- uid: MicroPlumberd.Plumber.AppendSnapshot*
  commentId: Overload:MicroPlumberd.Plumber.AppendSnapshot
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_AppendSnapshot_System_Object_System_Object_System_Int64_EventStore_Client_StreamState_
  name: AppendSnapshot
  nameWithType: Plumber.AppendSnapshot
  fullName: MicroPlumberd.Plumber.AppendSnapshot
- uid: MicroPlumberd.IPlumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  commentId: M:MicroPlumberd.IPlumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendSnapshot_System_Object_System_Object_System_Int64_EventStore_Client_StreamState_
  name: AppendSnapshot(object, object, long, StreamState)
  nameWithType: IPlumber.AppendSnapshot(object, object, long, StreamState)
  fullName: MicroPlumberd.IPlumber.AppendSnapshot(object, object, long, EventStore.Client.StreamState)
  nameWithType.vb: IPlumber.AppendSnapshot(Object, Object, Long, StreamState)
  fullName.vb: MicroPlumberd.IPlumber.AppendSnapshot(Object, Object, Long, EventStore.Client.StreamState)
  name.vb: AppendSnapshot(Object, Object, Long, StreamState)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
    name: AppendSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendSnapshot_System_Object_System_Object_System_Int64_EventStore_Client_StreamState_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendSnapshot(System.Object,System.Object,System.Int64,EventStore.Client.StreamState)
    name: AppendSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendSnapshot_System_Object_System_Object_System_Int64_EventStore_Client_StreamState_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: )
- uid: MicroPlumberd.Plumber.AppendEvent*
  commentId: Overload:MicroPlumberd.Plumber.AppendEvent
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_AppendEvent_System_Object_System_Object_System_Object_System_Nullable_EventStore_Client_StreamState__System_String_
  name: AppendEvent
  nameWithType: Plumber.AppendEvent
  fullName: MicroPlumberd.Plumber.AppendEvent
- uid: MicroPlumberd.IPlumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  commentId: M:MicroPlumberd.IPlumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_Object_System_Object_System_Object_System_Nullable_EventStore_Client_StreamState__System_String_
  name: AppendEvent(object, object, object, StreamState?, string)
  nameWithType: IPlumber.AppendEvent(object, object, object, StreamState?, string)
  fullName: MicroPlumberd.IPlumber.AppendEvent(object, object, object, EventStore.Client.StreamState?, string)
  nameWithType.vb: IPlumber.AppendEvent(Object, Object, Object, StreamState?, String)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvent(Object, Object, Object, EventStore.Client.StreamState?, String)
  name.vb: AppendEvent(Object, Object, Object, StreamState?, String)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
    name: AppendEvent
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_Object_System_Object_System_Object_System_Nullable_EventStore_Client_StreamState__System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvent(System.Object,System.Object,System.Object,System.Nullable{EventStore.Client.StreamState},System.String)
    name: AppendEvent
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_Object_System_Object_System_Object_System_Nullable_EventStore_Client_StreamState__System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Nullable{EventStore.Client.StreamState}
  commentId: T:System.Nullable{EventStore.Client.StreamState}
  parent: System
  definition: System.Nullable`1
  name: StreamState?
  nameWithType: StreamState?
  fullName: EventStore.Client.StreamState?
  spec.csharp:
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
- uid: MicroPlumberd.IPlumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  commentId: M:MicroPlumberd.IPlumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_String_EventStore_Client_StreamState_System_String_System_Object_System_Object_
  name: AppendEvent(string, StreamState, string, object, object)
  nameWithType: IPlumber.AppendEvent(string, StreamState, string, object, object)
  fullName: MicroPlumberd.IPlumber.AppendEvent(string, EventStore.Client.StreamState, string, object, object)
  nameWithType.vb: IPlumber.AppendEvent(String, StreamState, String, Object, Object)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvent(String, EventStore.Client.StreamState, String, Object, Object)
  name.vb: AppendEvent(String, StreamState, String, Object, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
    name: AppendEvent
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_String_EventStore_Client_StreamState_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvent(System.String,EventStore.Client.StreamState,System.String,System.Object,System.Object)
    name: AppendEvent
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvent_System_String_EventStore_Client_StreamState_System_String_System_Object_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.Plumber.SaveChanges*
  commentId: Overload:MicroPlumberd.Plumber.SaveChanges
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SaveChanges__1___0_System_Object_
  name: SaveChanges
  nameWithType: Plumber.SaveChanges
  fullName: MicroPlumberd.Plumber.SaveChanges
- uid: MicroPlumberd.IPlumber.SaveChanges``1({T},System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  name: SaveChanges<T>(T, object)
  nameWithType: IPlumber.SaveChanges<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveChanges<T>(T, object)
  nameWithType.vb: IPlumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  name: SaveChanges<T>(T, object)
  nameWithType: IPlumber.SaveChanges<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveChanges<T>(T, object)
  nameWithType.vb: IPlumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.Plumber.SaveNew*
  commentId: Overload:MicroPlumberd.Plumber.SaveNew
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SaveNew__1___0_System_Object_
  name: SaveNew
  nameWithType: Plumber.SaveNew
  fullName: MicroPlumberd.Plumber.SaveNew
- uid: MicroPlumberd.IPlumber.SaveNew``1({T},System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  name: SaveNew<T>(T, object)
  nameWithType: IPlumber.SaveNew<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveNew<T>(T, object)
  nameWithType.vb: IPlumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  name: SaveNew<T>(T, object)
  nameWithType: IPlumber.SaveNew<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveNew<T>(T, object)
  nameWithType.vb: IPlumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.Plumber.GetSnapshot*
  commentId: Overload:MicroPlumberd.Plumber.GetSnapshot
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_GetSnapshot_System_Object_System_Type_
  name: GetSnapshot
  nameWithType: Plumber.GetSnapshot
  fullName: MicroPlumberd.Plumber.GetSnapshot
- uid: MicroPlumberd.IPlumber.GetSnapshot(System.Object,System.Type)
  commentId: M:MicroPlumberd.IPlumber.GetSnapshot(System.Object,System.Type)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot_System_Object_System_Type_
  name: GetSnapshot(object, Type)
  nameWithType: IPlumber.GetSnapshot(object, Type)
  fullName: MicroPlumberd.IPlumber.GetSnapshot(object, System.Type)
  nameWithType.vb: IPlumber.GetSnapshot(Object, Type)
  fullName.vb: MicroPlumberd.IPlumber.GetSnapshot(Object, System.Type)
  name.vb: GetSnapshot(Object, Type)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.GetSnapshot(System.Object,System.Type)
    name: GetSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot_System_Object_System_Type_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.GetSnapshot(System.Object,System.Type)
    name: GetSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot_System_Object_System_Type_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Threading.Tasks.Task{MicroPlumberd.Snapshot}
  commentId: T:System.Threading.Tasks.Task{MicroPlumberd.Snapshot}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Snapshot>
  nameWithType: Task<Snapshot>
  fullName: System.Threading.Tasks.Task<MicroPlumberd.Snapshot>
  nameWithType.vb: Task(Of Snapshot)
  fullName.vb: System.Threading.Tasks.Task(Of MicroPlumberd.Snapshot)
  name.vb: Task(Of Snapshot)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MicroPlumberd.Snapshot
    name: Snapshot
    href: MicroPlumberd.Snapshot.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.Snapshot
    name: Snapshot
    href: MicroPlumberd.Snapshot.html
  - name: )
- uid: MicroPlumberd.IPlumber.GetSnapshot``1(System.Guid)
  commentId: M:MicroPlumberd.IPlumber.GetSnapshot``1(System.Guid)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot__1_System_Guid_
  name: GetSnapshot<T>(Guid)
  nameWithType: IPlumber.GetSnapshot<T>(Guid)
  fullName: MicroPlumberd.IPlumber.GetSnapshot<T>(System.Guid)
  nameWithType.vb: IPlumber.GetSnapshot(Of T)(Guid)
  fullName.vb: MicroPlumberd.IPlumber.GetSnapshot(Of T)(System.Guid)
  name.vb: GetSnapshot(Of T)(Guid)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.GetSnapshot``1(System.Guid)
    name: GetSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot__1_System_Guid_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.GetSnapshot``1(System.Guid)
    name: GetSnapshot
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_GetSnapshot__1_System_Guid_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Threading.Tasks.Task{MicroPlumberd.Snapshot{{T}}}
  commentId: T:System.Threading.Tasks.Task{MicroPlumberd.Snapshot{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Snapshot<T>>
  nameWithType: Task<Snapshot<T>>
  fullName: System.Threading.Tasks.Task<MicroPlumberd.Snapshot<T>>
  nameWithType.vb: Task(Of Snapshot(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of MicroPlumberd.Snapshot(Of T))
  name.vb: Task(Of Snapshot(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MicroPlumberd.Snapshot`1
    name: Snapshot
    href: MicroPlumberd.Snapshot-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.Snapshot`1
    name: Snapshot
    href: MicroPlumberd.Snapshot-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: MicroPlumberd.Plumber.AppendLink*
  commentId: Overload:MicroPlumberd.Plumber.AppendLink
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_AppendLink_System_String_MicroPlumberd_Metadata_System_Nullable_EventStore_Client_StreamState__
  name: AppendLink
  nameWithType: Plumber.AppendLink
  fullName: MicroPlumberd.Plumber.AppendLink
- uid: MicroPlumberd.IPlumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  commentId: M:MicroPlumberd.IPlumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendLink_System_String_MicroPlumberd_Metadata_System_Nullable_EventStore_Client_StreamState__
  name: AppendLink(string, Metadata, StreamState?)
  nameWithType: IPlumber.AppendLink(string, Metadata, StreamState?)
  fullName: MicroPlumberd.IPlumber.AppendLink(string, MicroPlumberd.Metadata, EventStore.Client.StreamState?)
  nameWithType.vb: IPlumber.AppendLink(String, Metadata, StreamState?)
  fullName.vb: MicroPlumberd.IPlumber.AppendLink(String, MicroPlumberd.Metadata, EventStore.Client.StreamState?)
  name.vb: AppendLink(String, Metadata, StreamState?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
    name: AppendLink
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendLink_System_String_MicroPlumberd_Metadata_System_Nullable_EventStore_Client_StreamState__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.Metadata
    name: Metadata
    href: MicroPlumberd.Metadata.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendLink(System.String,MicroPlumberd.Metadata,System.Nullable{EventStore.Client.StreamState})
    name: AppendLink
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendLink_System_String_MicroPlumberd_Metadata_System_Nullable_EventStore_Client_StreamState__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MicroPlumberd.Metadata
    name: Metadata
    href: MicroPlumberd.Metadata.html
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: '?'
  - name: )
- uid: MicroPlumberd.Metadata
  commentId: T:MicroPlumberd.Metadata
  parent: MicroPlumberd
  href: MicroPlumberd.Metadata.html
  name: Metadata
  nameWithType: Metadata
  fullName: MicroPlumberd.Metadata
- uid: MicroPlumberd.Plumber.GetExtension*
  commentId: Overload:MicroPlumberd.Plumber.GetExtension
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_GetExtension__1
  name: GetExtension
  nameWithType: Plumber.GetExtension
  fullName: MicroPlumberd.Plumber.GetExtension
- uid: MicroPlumberd.IExtension.GetExtension``1
  commentId: M:MicroPlumberd.IExtension.GetExtension``1
  parent: MicroPlumberd.IExtension
  href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  name: GetExtension<T>()
  nameWithType: IExtension.GetExtension<T>()
  fullName: MicroPlumberd.IExtension.GetExtension<T>()
  nameWithType.vb: IExtension.GetExtension(Of T)()
  fullName.vb: MicroPlumberd.IExtension.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: MicroPlumberd.IExtension.GetExtension``1
    name: GetExtension
    href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IExtension.GetExtension``1
    name: GetExtension
    href: MicroPlumberd.IExtension.html#MicroPlumberd_IExtension_GetExtension__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: MicroPlumberd.Plumber.Create*
  commentId: Overload:MicroPlumberd.Plumber.Create
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Create_EventStore_Client_EventStoreClientSettings_System_Action_MicroPlumberd_IPlumberConfig__
  name: Create
  nameWithType: Plumber.Create
  fullName: MicroPlumberd.Plumber.Create
- uid: EventStore.Client.EventStoreClientSettings
  commentId: T:EventStore.Client.EventStoreClientSettings
  parent: EventStore.Client
  isExternal: true
  name: EventStoreClientSettings
  nameWithType: EventStoreClientSettings
  fullName: EventStore.Client.EventStoreClientSettings
- uid: System.Action{MicroPlumberd.IPlumberConfig}
  commentId: T:System.Action{MicroPlumberd.IPlumberConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IPlumberConfig>
  nameWithType: Action<IPlumberConfig>
  fullName: System.Action<MicroPlumberd.IPlumberConfig>
  nameWithType.vb: Action(Of IPlumberConfig)
  fullName.vb: System.Action(Of MicroPlumberd.IPlumberConfig)
  name.vb: Action(Of IPlumberConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
    href: MicroPlumberd.IPlumberConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
    href: MicroPlumberd.IPlumberConfig.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
