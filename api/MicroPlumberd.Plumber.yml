### YamlMime:ManagedReference
items:
- uid: MicroPlumberd.Plumber
  commentId: T:MicroPlumberd.Plumber
  id: Plumber
  parent: MicroPlumberd
  children:
  - MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  - MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  - MicroPlumberd.Plumber.Client
  - MicroPlumberd.Plumber.Conventions
  - MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  - MicroPlumberd.Plumber.Get``1(System.Guid)
  - MicroPlumberd.Plumber.PersistentSubscriptionClient
  - MicroPlumberd.Plumber.ProjectionManagementClient
  - MicroPlumberd.Plumber.ProjectionRegister
  - MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  - MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  - MicroPlumberd.Plumber.Serializer
  - MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  - MicroPlumberd.Plumber.SubscribeModelPersistently``1(``0)
  - MicroPlumberd.Plumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  - MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  - MicroPlumberd.Plumber.SubscribeSet
  langs:
  - csharp
  - vb
  name: Plumber
  nameWithType: Plumber
  fullName: MicroPlumberd.Plumber
  type: Class
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Plumber
    path: src/MicroPlumberd/Plumber.cs
    startLine: 20
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: 'public class Plumber : IPlumber'
    content.vb: Public Class Plumber Implements IPlumber
  inheritance:
  - System.Object
  implements:
  - MicroPlumberd.IPlumber
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  commentId: M:MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  id: Create(EventStore.Client.EventStoreClientSettings,System.Action{MicroPlumberd.IPlumberConfig})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Create(EventStoreClientSettings?, Action<IPlumberConfig>?)
  nameWithType: Plumber.Create(EventStoreClientSettings?, Action<IPlumberConfig>?)
  fullName: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings?, System.Action<MicroPlumberd.IPlumberConfig>?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Create
    path: src/MicroPlumberd/Plumber.cs
    startLine: 26
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public static IPlumber Create(EventStoreClientSettings? settings = null, Action<IPlumberConfig>? configure = null)
    parameters:
    - id: settings
      type: EventStore.Client.EventStoreClientSettings
    - id: configure
      type: System.Action{MicroPlumberd.IPlumberConfig}
    return:
      type: MicroPlumberd.IPlumber
    content.vb: Public Shared Function Create(settings As EventStoreClientSettings = Nothing, configure As Action(Of IPlumberConfig) = Nothing) As IPlumber
  overload: MicroPlumberd.Plumber.Create*
  nameWithType.vb: Plumber.Create(EventStoreClientSettings, Action(Of IPlumberConfig))
  fullName.vb: MicroPlumberd.Plumber.Create(EventStore.Client.EventStoreClientSettings, System.Action(Of MicroPlumberd.IPlumberConfig))
  name.vb: Create(EventStoreClientSettings, Action(Of IPlumberConfig))
- uid: MicroPlumberd.Plumber.Serializer
  commentId: P:MicroPlumberd.Plumber.Serializer
  id: Serializer
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: Plumber.Serializer
  fullName: MicroPlumberd.Plumber.Serializer
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Serializer
    path: src/MicroPlumberd/Plumber.cs
    startLine: 43
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public IObjectSerializer Serializer { get; }
    parameters: []
    return:
      type: MicroPlumberd.IObjectSerializer
    content.vb: Public ReadOnly Property Serializer As IObjectSerializer
  overload: MicroPlumberd.Plumber.Serializer*
- uid: MicroPlumberd.Plumber.Conventions
  commentId: P:MicroPlumberd.Plumber.Conventions
  id: Conventions
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Conventions
  nameWithType: Plumber.Conventions
  fullName: MicroPlumberd.Plumber.Conventions
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Conventions
    path: src/MicroPlumberd/Plumber.cs
    startLine: 44
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public IConventions Conventions { get; }
    parameters: []
    return:
      type: MicroPlumberd.IConventions
    content.vb: Public ReadOnly Property Conventions As IConventions
  overload: MicroPlumberd.Plumber.Conventions*
- uid: MicroPlumberd.Plumber.ProjectionRegister
  commentId: P:MicroPlumberd.Plumber.ProjectionRegister
  id: ProjectionRegister
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ProjectionRegister
  nameWithType: Plumber.ProjectionRegister
  fullName: MicroPlumberd.Plumber.ProjectionRegister
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ProjectionRegister
    path: src/MicroPlumberd/Plumber.cs
    startLine: 46
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public IProjectionRegister ProjectionRegister { get; }
    parameters: []
    return:
      type: MicroPlumberd.IProjectionRegister
    content.vb: Public ReadOnly Property ProjectionRegister As IProjectionRegister
  overload: MicroPlumberd.Plumber.ProjectionRegister*
- uid: MicroPlumberd.Plumber.Client
  commentId: P:MicroPlumberd.Plumber.Client
  id: Client
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Plumber.Client
  fullName: MicroPlumberd.Plumber.Client
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Client
    path: src/MicroPlumberd/Plumber.cs
    startLine: 47
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public EventStoreClient Client { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStoreClient
    content.vb: Public ReadOnly Property Client As EventStoreClient
  overload: MicroPlumberd.Plumber.Client*
- uid: MicroPlumberd.Plumber.PersistentSubscriptionClient
  commentId: P:MicroPlumberd.Plumber.PersistentSubscriptionClient
  id: PersistentSubscriptionClient
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionClient
  nameWithType: Plumber.PersistentSubscriptionClient
  fullName: MicroPlumberd.Plumber.PersistentSubscriptionClient
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: PersistentSubscriptionClient
    path: src/MicroPlumberd/Plumber.cs
    startLine: 48
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public EventStorePersistentSubscriptionsClient PersistentSubscriptionClient { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStorePersistentSubscriptionsClient
    content.vb: Public ReadOnly Property PersistentSubscriptionClient As EventStorePersistentSubscriptionsClient
  overload: MicroPlumberd.Plumber.PersistentSubscriptionClient*
- uid: MicroPlumberd.Plumber.ProjectionManagementClient
  commentId: P:MicroPlumberd.Plumber.ProjectionManagementClient
  id: ProjectionManagementClient
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: ProjectionManagementClient
  nameWithType: Plumber.ProjectionManagementClient
  fullName: MicroPlumberd.Plumber.ProjectionManagementClient
  type: Property
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: ProjectionManagementClient
    path: src/MicroPlumberd/Plumber.cs
    startLine: 49
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  syntax:
    content: public EventStoreProjectionManagementClient ProjectionManagementClient { get; }
    parameters: []
    return:
      type: EventStore.Client.EventStoreProjectionManagementClient
    content.vb: Public ReadOnly Property ProjectionManagementClient As EventStoreProjectionManagementClient
  overload: MicroPlumberd.Plumber.ProjectionManagementClient*
- uid: MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.Plumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  id: Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Subscribe(string, FromStream, UserCredentials?, CancellationToken)
  nameWithType: Plumber.Subscribe(string, FromStream, UserCredentials?, CancellationToken)
  fullName: MicroPlumberd.Plumber.Subscribe(string, EventStore.Client.FromStream, EventStore.Client.UserCredentials?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Subscribe
    path: src/MicroPlumberd/Plumber.cs
    startLine: 51
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: public ISubscriptionRunner Subscribe(string streamName, FromStream start, UserCredentials? userCredentials = null, CancellationToken cancellationToken = default)
    parameters:
    - id: streamName
      type: System.String
    - id: start
      type: EventStore.Client.FromStream
    - id: userCredentials
      type: EventStore.Client.UserCredentials
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: MicroPlumberd.ISubscriptionRunner
    content.vb: Public Function Subscribe(streamName As String, start As FromStream, userCredentials As UserCredentials = Nothing, cancellationToken As CancellationToken = Nothing) As ISubscriptionRunner
  overload: MicroPlumberd.Plumber.Subscribe*
  implements:
  - MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  nameWithType.vb: Plumber.Subscribe(String, FromStream, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.Plumber.Subscribe(String, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: Subscribe(String, FromStream, UserCredentials, CancellationToken)
- uid: MicroPlumberd.Plumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  commentId: M:MicroPlumberd.Plumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  id: SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeModel<TModel>(TModel, FromStream?)
  nameWithType: Plumber.SubscribeModel<TModel>(TModel, FromStream?)
  fullName: MicroPlumberd.Plumber.SubscribeModel<TModel>(TModel, EventStore.Client.FromStream?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeModel
    path: src/MicroPlumberd/Plumber.cs
    startLine: 56
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeModel<TModel>(TModel model, FromStream? start = null) where TModel : IReadModel, ITypeRegister'
    parameters:
    - id: model
      type: '{TModel}'
    - id: start
      type: System.Nullable{EventStore.Client.FromStream}
    typeParameters:
    - id: TModel
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
    content.vb: Public Function SubscribeModel(Of TModel As {IReadModel, ITypeRegister})(model As TModel, start As FromStream? = Nothing) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeModel*
  implements:
  - MicroPlumberd.IPlumber.SubscribeModel``1({TModel},System.Nullable{EventStore.Client.FromStream})
  nameWithType.vb: Plumber.SubscribeModel(Of TModel)(TModel, FromStream?)
  fullName.vb: MicroPlumberd.Plumber.SubscribeModel(Of TModel)(TModel, EventStore.Client.FromStream?)
  name.vb: SubscribeModel(Of TModel)(TModel, FromStream?)
- uid: MicroPlumberd.Plumber.SubscribeModelPersistently``1(``0)
  commentId: M:MicroPlumberd.Plumber.SubscribeModelPersistently``1(``0)
  id: SubscribeModelPersistently``1(``0)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeModelPersistently<TModel>(TModel)
  nameWithType: Plumber.SubscribeModelPersistently<TModel>(TModel)
  fullName: MicroPlumberd.Plumber.SubscribeModelPersistently<TModel>(TModel)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeModelPersistently
    path: src/MicroPlumberd/Plumber.cs
    startLine: 66
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public Task<IAsyncDisposable> SubscribeModelPersistently<TModel>(TModel model) where TModel : IReadModel, ITypeRegister'
    parameters:
    - id: model
      type: '{TModel}'
    typeParameters:
    - id: TModel
    return:
      type: System.Threading.Tasks.Task{System.IAsyncDisposable}
    content.vb: Public Function SubscribeModelPersistently(Of TModel As {IReadModel, ITypeRegister})(model As TModel) As Task(Of IAsyncDisposable)
  overload: MicroPlumberd.Plumber.SubscribeModelPersistently*
  implements:
  - MicroPlumberd.IPlumber.SubscribeModelPersistently``1({TModel})
  nameWithType.vb: Plumber.SubscribeModelPersistently(Of TModel)(TModel)
  fullName.vb: MicroPlumberd.Plumber.SubscribeModelPersistently(Of TModel)(TModel)
  name.vb: SubscribeModelPersistently(Of TModel)(TModel)
- uid: MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.Plumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  id: SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribePersistently(string, string, int, UserCredentials?, CancellationToken)
  nameWithType: Plumber.SubscribePersistently(string, string, int, UserCredentials?, CancellationToken)
  fullName: MicroPlumberd.Plumber.SubscribePersistently(string, string, int, EventStore.Client.UserCredentials?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribePersistently
    path: src/MicroPlumberd/Plumber.cs
    startLine: 77
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: public ISubscriptionRunner SubscribePersistently(string streamName, string groupName, int bufferSize = 10, UserCredentials? userCredentials = null, CancellationToken cancellationToken = default)
    parameters:
    - id: streamName
      type: System.String
    - id: groupName
      type: System.String
    - id: bufferSize
      type: System.Int32
    - id: userCredentials
      type: EventStore.Client.UserCredentials
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: MicroPlumberd.ISubscriptionRunner
    content.vb: Public Function SubscribePersistently(streamName As String, groupName As String, bufferSize As Integer = 10, userCredentials As UserCredentials = Nothing, cancellationToken As CancellationToken = Nothing) As ISubscriptionRunner
  overload: MicroPlumberd.Plumber.SubscribePersistently*
  implements:
  - MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  nameWithType.vb: Plumber.SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.Plumber.SubscribePersistently(String, String, Integer, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
- uid: MicroPlumberd.Plumber.SubscribeSet
  commentId: M:MicroPlumberd.Plumber.SubscribeSet
  id: SubscribeSet
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SubscribeSet()
  nameWithType: Plumber.SubscribeSet()
  fullName: MicroPlumberd.Plumber.SubscribeSet()
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SubscribeSet
    path: src/MicroPlumberd/Plumber.cs
    startLine: 82
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: public ISubscriptionSet SubscribeSet()
    return:
      type: MicroPlumberd.ISubscriptionSet
    content.vb: Public Function SubscribeSet() As ISubscriptionSet
  overload: MicroPlumberd.Plumber.SubscribeSet*
  implements:
  - MicroPlumberd.IPlumber.SubscribeSet
- uid: MicroPlumberd.Plumber.Get``1(System.Guid)
  commentId: M:MicroPlumberd.Plumber.Get``1(System.Guid)
  id: Get``1(System.Guid)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: Get<T>(Guid)
  nameWithType: Plumber.Get<T>(Guid)
  fullName: MicroPlumberd.Plumber.Get<T>(System.Guid)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: Get
    path: src/MicroPlumberd/Plumber.cs
    startLine: 84
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public Task<T> Get<T>(Guid id) where T : IAggregate<T>, ITypeRegister'
    parameters:
    - id: id
      type: System.Guid
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function [Get](Of T As {IAggregate(Of T), ITypeRegister})(id As Guid) As Task(Of T)
  overload: MicroPlumberd.Plumber.Get*
  implements:
  - MicroPlumberd.IPlumber.Get``1(System.Guid)
  nameWithType.vb: Plumber.Get(Of T)(Guid)
  fullName.vb: MicroPlumberd.Plumber.Get(Of T)(System.Guid)
  name.vb: Get(Of T)(Guid)
- uid: MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  id: AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvents(string, StreamRevision, IEnumerable<object>, object?)
  nameWithType: Plumber.AppendEvents(string, StreamRevision, IEnumerable<object>, object?)
  fullName: MicroPlumberd.Plumber.AppendEvents(string, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable<object>, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvents
    path: src/MicroPlumberd/Plumber.cs
    startLine: 97
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends event to a stream, uses relevant convention, however aggregate-type or instance are passed as null to conventions.
  example: []
  syntax:
    content: public Task AppendEvents(string streamId, StreamRevision rev, IEnumerable<object> events, object? metadata = null)
    parameters:
    - id: streamId
      type: System.String
      description: Full stream id, typically in format {category}-{id}
    - id: rev
      type: EventStore.Client.StreamRevision
      description: Expected stream revision
    - id: events
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: Events that are going to be serialized and appended
    - id: metadata
      type: System.Object
      description: Metadata that will be merged with metadata created from conventions
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function AppendEvents(streamId As String, rev As StreamRevision, events As IEnumerable(Of Object), metadata As Object = Nothing) As Task
  overload: MicroPlumberd.Plumber.AppendEvents*
  implements:
  - MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  nameWithType.vb: Plumber.AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.Plumber.AppendEvents(String, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
- uid: MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.Plumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  id: AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: AppendEvents(string, StreamState, IEnumerable<object>, object?)
  nameWithType: Plumber.AppendEvents(string, StreamState, IEnumerable<object>, object?)
  fullName: MicroPlumberd.Plumber.AppendEvents(string, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable<object>, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: AppendEvents
    path: src/MicroPlumberd/Plumber.cs
    startLine: 102
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  summary: Appends event to a stream, uses relevant convention, however aggregate-type or instance are passed as null to conventions.
  example: []
  syntax:
    content: public Task AppendEvents(string streamId, StreamState state, IEnumerable<object> events, object? metadata = null)
    parameters:
    - id: streamId
      type: System.String
      description: Full stream id, typically in format {category}-{id}
    - id: state
      type: EventStore.Client.StreamState
      description: State of the stream
    - id: events
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: Events that are going to be serialized and appended
    - id: metadata
      type: System.Object
      description: Metadata that will be merged with metadata created from conventions
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function AppendEvents(streamId As String, state As StreamState, events As IEnumerable(Of Object), metadata As Object = Nothing) As Task
  overload: MicroPlumberd.Plumber.AppendEvents*
  implements:
  - MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  nameWithType.vb: Plumber.AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.Plumber.AppendEvents(String, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
- uid: MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  commentId: M:MicroPlumberd.Plumber.SaveChanges``1(``0,System.Object)
  id: SaveChanges``1(``0,System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SaveChanges<T>(T, object?)
  nameWithType: Plumber.SaveChanges<T>(T, object?)
  fullName: MicroPlumberd.Plumber.SaveChanges<T>(T, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SaveChanges
    path: src/MicroPlumberd/Plumber.cs
    startLine: 140
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public Task SaveChanges<T>(T aggregate, object? metadata = null) where T : IAggregate<T>'
    parameters:
    - id: aggregate
      type: '{T}'
    - id: metadata
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveChanges(Of T As IAggregate(Of T))(aggregate As T, metadata As Object = Nothing) As Task
  overload: MicroPlumberd.Plumber.SaveChanges*
  implements:
  - MicroPlumberd.IPlumber.SaveChanges``1({T},System.Object)
  nameWithType.vb: Plumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.Plumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
- uid: MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  commentId: M:MicroPlumberd.Plumber.SaveNew``1(``0,System.Object)
  id: SaveNew``1(``0,System.Object)
  parent: MicroPlumberd.Plumber
  langs:
  - csharp
  - vb
  name: SaveNew<T>(T, object?)
  nameWithType: Plumber.SaveNew<T>(T, object?)
  fullName: MicroPlumberd.Plumber.SaveNew<T>(T, object?)
  type: Method
  source:
    remote:
      path: src/MicroPlumberd/Plumber.cs
      branch: master
      repo: https://github.com/modelingevolution/micro-plumberd.git
    id: SaveNew
    path: src/MicroPlumberd/Plumber.cs
    startLine: 150
  assemblies:
  - MicroPlumberd
  namespace: MicroPlumberd
  example: []
  syntax:
    content: 'public Task SaveNew<T>(T aggregate, object? metadata = null) where T : IAggregate<T>'
    parameters:
    - id: aggregate
      type: '{T}'
    - id: metadata
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveNew(Of T As IAggregate(Of T))(aggregate As T, metadata As Object = Nothing) As Task
  overload: MicroPlumberd.Plumber.SaveNew*
  implements:
  - MicroPlumberd.IPlumber.SaveNew``1({T},System.Object)
  nameWithType.vb: Plumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.Plumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
references:
- uid: MicroPlumberd
  commentId: N:MicroPlumberd
  href: MicroPlumberd.html
  name: MicroPlumberd
  nameWithType: MicroPlumberd
  fullName: MicroPlumberd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MicroPlumberd.IPlumber
  commentId: T:MicroPlumberd.IPlumber
  parent: MicroPlumberd
  href: MicroPlumberd.IPlumber.html
  name: IPlumber
  nameWithType: IPlumber
  fullName: MicroPlumberd.IPlumber
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MicroPlumberd.Plumber.Create*
  commentId: Overload:MicroPlumberd.Plumber.Create
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Create_EventStore_Client_EventStoreClientSettings_System_Action_MicroPlumberd_IPlumberConfig__
  name: Create
  nameWithType: Plumber.Create
  fullName: MicroPlumberd.Plumber.Create
- uid: EventStore.Client.EventStoreClientSettings
  commentId: T:EventStore.Client.EventStoreClientSettings
  parent: EventStore.Client
  isExternal: true
  name: EventStoreClientSettings
  nameWithType: EventStoreClientSettings
  fullName: EventStore.Client.EventStoreClientSettings
- uid: System.Action{MicroPlumberd.IPlumberConfig}
  commentId: T:System.Action{MicroPlumberd.IPlumberConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IPlumberConfig>
  nameWithType: Action<IPlumberConfig>
  fullName: System.Action<MicroPlumberd.IPlumberConfig>
  nameWithType.vb: Action(Of IPlumberConfig)
  fullName.vb: System.Action(Of MicroPlumberd.IPlumberConfig)
  name.vb: Action(Of IPlumberConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
    href: MicroPlumberd.IPlumberConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MicroPlumberd.IPlumberConfig
    name: IPlumberConfig
    href: MicroPlumberd.IPlumberConfig.html
  - name: )
- uid: EventStore.Client
  commentId: N:EventStore.Client
  isExternal: true
  name: EventStore.Client
  nameWithType: EventStore.Client
  fullName: EventStore.Client
  spec.csharp:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
  spec.vb:
  - uid: EventStore
    name: EventStore
    isExternal: true
  - name: .
  - uid: EventStore.Client
    name: Client
    isExternal: true
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MicroPlumberd.Plumber.Serializer*
  commentId: Overload:MicroPlumberd.Plumber.Serializer
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Serializer
  name: Serializer
  nameWithType: Plumber.Serializer
  fullName: MicroPlumberd.Plumber.Serializer
- uid: MicroPlumberd.IObjectSerializer
  commentId: T:MicroPlumberd.IObjectSerializer
  parent: MicroPlumberd
  href: MicroPlumberd.IObjectSerializer.html
  name: IObjectSerializer
  nameWithType: IObjectSerializer
  fullName: MicroPlumberd.IObjectSerializer
- uid: MicroPlumberd.Plumber.Conventions*
  commentId: Overload:MicroPlumberd.Plumber.Conventions
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Conventions
  name: Conventions
  nameWithType: Plumber.Conventions
  fullName: MicroPlumberd.Plumber.Conventions
- uid: MicroPlumberd.IConventions
  commentId: T:MicroPlumberd.IConventions
  parent: MicroPlumberd
  href: MicroPlumberd.IConventions.html
  name: IConventions
  nameWithType: IConventions
  fullName: MicroPlumberd.IConventions
- uid: MicroPlumberd.Plumber.ProjectionRegister*
  commentId: Overload:MicroPlumberd.Plumber.ProjectionRegister
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ProjectionRegister
  name: ProjectionRegister
  nameWithType: Plumber.ProjectionRegister
  fullName: MicroPlumberd.Plumber.ProjectionRegister
- uid: MicroPlumberd.IProjectionRegister
  commentId: T:MicroPlumberd.IProjectionRegister
  parent: MicroPlumberd
  href: MicroPlumberd.IProjectionRegister.html
  name: IProjectionRegister
  nameWithType: IProjectionRegister
  fullName: MicroPlumberd.IProjectionRegister
- uid: MicroPlumberd.Plumber.Client*
  commentId: Overload:MicroPlumberd.Plumber.Client
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Client
  name: Client
  nameWithType: Plumber.Client
  fullName: MicroPlumberd.Plumber.Client
- uid: EventStore.Client.EventStoreClient
  commentId: T:EventStore.Client.EventStoreClient
  parent: EventStore.Client
  isExternal: true
  name: EventStoreClient
  nameWithType: EventStoreClient
  fullName: EventStore.Client.EventStoreClient
- uid: MicroPlumberd.Plumber.PersistentSubscriptionClient*
  commentId: Overload:MicroPlumberd.Plumber.PersistentSubscriptionClient
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_PersistentSubscriptionClient
  name: PersistentSubscriptionClient
  nameWithType: Plumber.PersistentSubscriptionClient
  fullName: MicroPlumberd.Plumber.PersistentSubscriptionClient
- uid: EventStore.Client.EventStorePersistentSubscriptionsClient
  commentId: T:EventStore.Client.EventStorePersistentSubscriptionsClient
  parent: EventStore.Client
  isExternal: true
  name: EventStorePersistentSubscriptionsClient
  nameWithType: EventStorePersistentSubscriptionsClient
  fullName: EventStore.Client.EventStorePersistentSubscriptionsClient
- uid: MicroPlumberd.Plumber.ProjectionManagementClient*
  commentId: Overload:MicroPlumberd.Plumber.ProjectionManagementClient
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_ProjectionManagementClient
  name: ProjectionManagementClient
  nameWithType: Plumber.ProjectionManagementClient
  fullName: MicroPlumberd.Plumber.ProjectionManagementClient
- uid: EventStore.Client.EventStoreProjectionManagementClient
  commentId: T:EventStore.Client.EventStoreProjectionManagementClient
  parent: EventStore.Client
  isExternal: true
  name: EventStoreProjectionManagementClient
  nameWithType: EventStoreProjectionManagementClient
  fullName: EventStore.Client.EventStoreProjectionManagementClient
- uid: MicroPlumberd.Plumber.Subscribe*
  commentId: Overload:MicroPlumberd.Plumber.Subscribe
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: Subscribe
  nameWithType: Plumber.Subscribe
  fullName: MicroPlumberd.Plumber.Subscribe
- uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: Subscribe(string, FromStream, UserCredentials, CancellationToken)
  nameWithType: IPlumber.Subscribe(string, FromStream, UserCredentials, CancellationToken)
  fullName: MicroPlumberd.IPlumber.Subscribe(string, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  nameWithType.vb: IPlumber.Subscribe(String, FromStream, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.IPlumber.Subscribe(String, EventStore.Client.FromStream, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: Subscribe(String, FromStream, UserCredentials, CancellationToken)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: Subscribe
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Subscribe(System.String,EventStore.Client.FromStream,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: Subscribe
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Subscribe_System_String_EventStore_Client_FromStream_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: EventStore.Client.FromStream
  commentId: T:EventStore.Client.FromStream
  parent: EventStore.Client
  isExternal: true
  name: FromStream
  nameWithType: FromStream
  fullName: EventStore.Client.FromStream
- uid: EventStore.Client.UserCredentials
  commentId: T:EventStore.Client.UserCredentials
  parent: EventStore.Client
  isExternal: true
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: EventStore.Client.UserCredentials
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: MicroPlumberd.ISubscriptionRunner
  commentId: T:MicroPlumberd.ISubscriptionRunner
  parent: MicroPlumberd
  href: MicroPlumberd.ISubscriptionRunner.html
  name: ISubscriptionRunner
  nameWithType: ISubscriptionRunner
  fullName: MicroPlumberd.ISubscriptionRunner
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: MicroPlumberd.Plumber.SubscribeModel*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeModel
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  name: SubscribeModel
  nameWithType: Plumber.SubscribeModel
  fullName: MicroPlumberd.Plumber.SubscribeModel
- uid: MicroPlumberd.IPlumber.SubscribeModel``1({TModel},System.Nullable{EventStore.Client.FromStream})
  commentId: M:MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  name: SubscribeModel<TModel>(TModel, FromStream?)
  nameWithType: IPlumber.SubscribeModel<TModel>(TModel, FromStream?)
  fullName: MicroPlumberd.IPlumber.SubscribeModel<TModel>(TModel, EventStore.Client.FromStream?)
  nameWithType.vb: IPlumber.SubscribeModel(Of TModel)(TModel, FromStream?)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeModel(Of TModel)(TModel, EventStore.Client.FromStream?)
  name.vb: SubscribeModel(Of TModel)(TModel, FromStream?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
    name: SubscribeModel
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
    name: SubscribeModel
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: )
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Nullable{EventStore.Client.FromStream}
  commentId: T:System.Nullable{EventStore.Client.FromStream}
  parent: System
  definition: System.Nullable`1
  name: FromStream?
  nameWithType: FromStream?
  fullName: EventStore.Client.FromStream?
  spec.csharp:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
- uid: System.Threading.Tasks.Task{System.IAsyncDisposable}
  commentId: T:System.Threading.Tasks.Task{System.IAsyncDisposable}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IAsyncDisposable>
  nameWithType: Task<IAsyncDisposable>
  fullName: System.Threading.Tasks.Task<System.IAsyncDisposable>
  nameWithType.vb: Task(Of IAsyncDisposable)
  fullName.vb: System.Threading.Tasks.Task(Of System.IAsyncDisposable)
  name.vb: Task(Of IAsyncDisposable)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IAsyncDisposable
    name: IAsyncDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IAsyncDisposable
    name: IAsyncDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  commentId: M:MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  name: SubscribeModel<TModel>(TModel, FromStream?)
  nameWithType: IPlumber.SubscribeModel<TModel>(TModel, FromStream?)
  fullName: MicroPlumberd.IPlumber.SubscribeModel<TModel>(TModel, EventStore.Client.FromStream?)
  nameWithType.vb: IPlumber.SubscribeModel(Of TModel)(TModel, FromStream?)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeModel(Of TModel)(TModel, EventStore.Client.FromStream?)
  name.vb: SubscribeModel(Of TModel)(TModel, FromStream?)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
    name: SubscribeModel
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeModel``1(``0,System.Nullable{EventStore.Client.FromStream})
    name: SubscribeModel
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModel__1___0_System_Nullable_EventStore_Client_FromStream__
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: ','
  - name: " "
  - uid: EventStore.Client.FromStream
    name: FromStream
    isExternal: true
  - name: '?'
  - name: )
- uid: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MicroPlumberd.Plumber.SubscribeModelPersistently*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeModelPersistently
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeModelPersistently__1___0_
  name: SubscribeModelPersistently
  nameWithType: Plumber.SubscribeModelPersistently
  fullName: MicroPlumberd.Plumber.SubscribeModelPersistently
- uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1({TModel})
  commentId: M:MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  name: SubscribeModelPersistently<TModel>(TModel)
  nameWithType: IPlumber.SubscribeModelPersistently<TModel>(TModel)
  fullName: MicroPlumberd.IPlumber.SubscribeModelPersistently<TModel>(TModel)
  nameWithType.vb: IPlumber.SubscribeModelPersistently(Of TModel)(TModel)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeModelPersistently(Of TModel)(TModel)
  name.vb: SubscribeModelPersistently(Of TModel)(TModel)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
    name: SubscribeModelPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
    name: SubscribeModelPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: )
- uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
  commentId: M:MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  name: SubscribeModelPersistently<TModel>(TModel)
  nameWithType: IPlumber.SubscribeModelPersistently<TModel>(TModel)
  fullName: MicroPlumberd.IPlumber.SubscribeModelPersistently<TModel>(TModel)
  nameWithType.vb: IPlumber.SubscribeModelPersistently(Of TModel)(TModel)
  fullName.vb: MicroPlumberd.IPlumber.SubscribeModelPersistently(Of TModel)(TModel)
  name.vb: SubscribeModelPersistently(Of TModel)(TModel)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
    name: SubscribeModelPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  - name: <
  - name: TModel
  - name: '>'
  - name: (
  - name: TModel
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeModelPersistently``1(``0)
    name: SubscribeModelPersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeModelPersistently__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
  - name: (
  - name: TModel
  - name: )
- uid: MicroPlumberd.Plumber.SubscribePersistently*
  commentId: Overload:MicroPlumberd.Plumber.SubscribePersistently
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: SubscribePersistently
  nameWithType: Plumber.SubscribePersistently
  fullName: MicroPlumberd.Plumber.SubscribePersistently
- uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  commentId: M:MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  name: SubscribePersistently(string, string, int, UserCredentials, CancellationToken)
  nameWithType: IPlumber.SubscribePersistently(string, string, int, UserCredentials, CancellationToken)
  fullName: MicroPlumberd.IPlumber.SubscribePersistently(string, string, int, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  nameWithType.vb: IPlumber.SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  fullName.vb: MicroPlumberd.IPlumber.SubscribePersistently(String, String, Integer, EventStore.Client.UserCredentials, System.Threading.CancellationToken)
  name.vb: SubscribePersistently(String, String, Integer, UserCredentials, CancellationToken)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: SubscribePersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribePersistently(System.String,System.String,System.Int32,EventStore.Client.UserCredentials,System.Threading.CancellationToken)
    name: SubscribePersistently
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribePersistently_System_String_System_String_System_Int32_EventStore_Client_UserCredentials_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: EventStore.Client.UserCredentials
    name: UserCredentials
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MicroPlumberd.Plumber.SubscribeSet*
  commentId: Overload:MicroPlumberd.Plumber.SubscribeSet
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SubscribeSet
  name: SubscribeSet
  nameWithType: Plumber.SubscribeSet
  fullName: MicroPlumberd.Plumber.SubscribeSet
- uid: MicroPlumberd.IPlumber.SubscribeSet
  commentId: M:MicroPlumberd.IPlumber.SubscribeSet
  parent: MicroPlumberd.IPlumber
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  name: SubscribeSet()
  nameWithType: IPlumber.SubscribeSet()
  fullName: MicroPlumberd.IPlumber.SubscribeSet()
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SubscribeSet
    name: SubscribeSet
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  - name: (
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SubscribeSet
    name: SubscribeSet
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SubscribeSet
  - name: (
  - name: )
- uid: MicroPlumberd.ISubscriptionSet
  commentId: T:MicroPlumberd.ISubscriptionSet
  parent: MicroPlumberd
  href: MicroPlumberd.ISubscriptionSet.html
  name: ISubscriptionSet
  nameWithType: ISubscriptionSet
  fullName: MicroPlumberd.ISubscriptionSet
- uid: MicroPlumberd.Plumber.Get*
  commentId: Overload:MicroPlumberd.Plumber.Get
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_Get__1_System_Guid_
  name: Get
  nameWithType: Plumber.Get
  fullName: MicroPlumberd.Plumber.Get
- uid: MicroPlumberd.IPlumber.Get``1(System.Guid)
  commentId: M:MicroPlumberd.IPlumber.Get``1(System.Guid)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Guid_
  name: Get<T>(Guid)
  nameWithType: IPlumber.Get<T>(Guid)
  fullName: MicroPlumberd.IPlumber.Get<T>(System.Guid)
  nameWithType.vb: IPlumber.Get(Of T)(Guid)
  fullName.vb: MicroPlumberd.IPlumber.Get(Of T)(System.Guid)
  name.vb: Get(Of T)(Guid)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.Get``1(System.Guid)
    name: Get
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Guid_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.Get``1(System.Guid)
    name: Get
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_Get__1_System_Guid_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MicroPlumberd.Plumber.AppendEvents*
  commentId: Overload:MicroPlumberd.Plumber.AppendEvents
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents
  nameWithType: Plumber.AppendEvents
  fullName: MicroPlumberd.Plumber.AppendEvents
- uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents(string, StreamRevision, IEnumerable<object>, object)
  nameWithType: IPlumber.AppendEvents(string, StreamRevision, IEnumerable<object>, object)
  fullName: MicroPlumberd.IPlumber.AppendEvents(string, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable<object>, object)
  nameWithType.vb: IPlumber.AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvents(String, EventStore.Client.StreamRevision, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamRevision, IEnumerable(Of Object), Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamRevision
    name: StreamRevision
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamRevision,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamRevision_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamRevision
    name: StreamRevision
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: EventStore.Client.StreamRevision
  commentId: T:EventStore.Client.StreamRevision
  parent: EventStore.Client
  isExternal: true
  name: StreamRevision
  nameWithType: StreamRevision
  fullName: EventStore.Client.StreamRevision
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: MicroPlumberd.IPlumber
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  name: AppendEvents(string, StreamState, IEnumerable<object>, object)
  nameWithType: IPlumber.AppendEvents(string, StreamState, IEnumerable<object>, object)
  fullName: MicroPlumberd.IPlumber.AppendEvents(string, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable<object>, object)
  nameWithType.vb: IPlumber.AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  fullName.vb: MicroPlumberd.IPlumber.AppendEvents(String, EventStore.Client.StreamState, System.Collections.Generic.IEnumerable(Of Object), Object)
  name.vb: AppendEvents(String, StreamState, IEnumerable(Of Object), Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.AppendEvents(System.String,EventStore.Client.StreamState,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: AppendEvents
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_AppendEvents_System_String_EventStore_Client_StreamState_System_Collections_Generic_IEnumerable_System_Object__System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EventStore.Client.StreamState
    name: StreamState
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: EventStore.Client.StreamState
  commentId: T:EventStore.Client.StreamState
  parent: EventStore.Client
  isExternal: true
  name: StreamState
  nameWithType: StreamState
  fullName: EventStore.Client.StreamState
- uid: MicroPlumberd.Plumber.SaveChanges*
  commentId: Overload:MicroPlumberd.Plumber.SaveChanges
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SaveChanges__1___0_System_Object_
  name: SaveChanges
  nameWithType: Plumber.SaveChanges
  fullName: MicroPlumberd.Plumber.SaveChanges
- uid: MicroPlumberd.IPlumber.SaveChanges``1({T},System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  name: SaveChanges<T>(T, object)
  nameWithType: IPlumber.SaveChanges<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveChanges<T>(T, object)
  nameWithType.vb: IPlumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  name: SaveChanges<T>(T, object)
  nameWithType: IPlumber.SaveChanges<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveChanges<T>(T, object)
  nameWithType.vb: IPlumber.SaveChanges(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveChanges(Of T)(T, Object)
  name.vb: SaveChanges(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveChanges``1(``0,System.Object)
    name: SaveChanges
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveChanges__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MicroPlumberd.Plumber.SaveNew*
  commentId: Overload:MicroPlumberd.Plumber.SaveNew
  href: MicroPlumberd.Plumber.html#MicroPlumberd_Plumber_SaveNew__1___0_System_Object_
  name: SaveNew
  nameWithType: Plumber.SaveNew
  fullName: MicroPlumberd.Plumber.SaveNew
- uid: MicroPlumberd.IPlumber.SaveNew``1({T},System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  parent: MicroPlumberd.IPlumber
  definition: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  name: SaveNew<T>(T, object)
  nameWithType: IPlumber.SaveNew<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveNew<T>(T, object)
  nameWithType.vb: IPlumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  commentId: M:MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
  isExternal: true
  href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  name: SaveNew<T>(T, object)
  nameWithType: IPlumber.SaveNew<T>(T, object)
  fullName: MicroPlumberd.IPlumber.SaveNew<T>(T, object)
  nameWithType.vb: IPlumber.SaveNew(Of T)(T, Object)
  fullName.vb: MicroPlumberd.IPlumber.SaveNew(Of T)(T, Object)
  name.vb: SaveNew(Of T)(T, Object)
  spec.csharp:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MicroPlumberd.IPlumber.SaveNew``1(``0,System.Object)
    name: SaveNew
    href: MicroPlumberd.IPlumber.html#MicroPlumberd_IPlumber_SaveNew__1___0_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
